<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assign_Closed_Status</name>
        <label>Assign Closed Status</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>Get_Record_Type.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Close_BYB_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Record_Type_Name</name>
        <label>Record Type Name</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>BYB_Record_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Record_Type.Record_Type_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits BYB</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Closed_Status</targetReference>
            </connector>
            <label>BYB Record Type</label>
        </rules>
    </decisions>
    <description>Screen Flow to show close case for different record types</description>
    <dynamicChoiceSets>
        <name>Audience_opt</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>Audience__c</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>CaseReasonOpt</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>Reason</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>Status</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>Status</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>ErrorParsed</name>
        <dataType>String</dataType>
        <expression>MID({!$Flow.FaultMessage}, FIND(&apos;FIELD_CUSTOM_VALIDATION_EXCEPTION: &apos;, {!$Flow.FaultMessage}) + LEN(&apos;FIELD_CUSTOM_VALIDATION_EXCEPTION: &apos;), FIND(&apos;. You can look up ExceptionCode&apos;, {!$Flow.FaultMessage}) - FIND(&apos;FIELD_CUSTOM_VALIDATION_EXCEPTION: &apos;, {!$Flow.FaultMessage}) - LEN(&apos;FIELD_CUSTOM_VALIDATION_EXCEPTION: &apos;))</expression>
    </formulas>
    <interviewLabel>Case :: Close Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case :: Close Case</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>314</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Record_Type_Name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <connector>
            <targetReference>Saved</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputReference>Get_Record_Type</inputReference>
    </recordUpdates>
    <screens>
        <name>Close_BYB_Case</name>
        <label>Close BYB Case</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>Get_Record_Type.Status</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>Get_Record_Type.Reason</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>Get_Record_Type.Audience__c</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>Get_Record_Type.Comments</objectFieldReference>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error</name>
        <label>Error</label>
        <locationX>314</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Error_Msg</name>
            <fieldText>&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;Something went wrong:

{!ErrorParsed}

If error persists, please contact your salesforce administrator.





&lt;/pre&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Saved</name>
        <label>Saved!</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CS</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;Case was closed successfully!&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Record_Type</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
