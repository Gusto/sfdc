<apex:page standardController="Case" >

    <div>
        <div class="refresh" onClick="window.location.reload();">Refresh</div>
    </div>
    
    <style type='text/css'>
        .embeddedServiceHelpButton .helpButton .uiButton {
            background-color: #0A8080;
            font-family: "Arial", sans-serif;
            max-width: 25em;
        }
        .embeddedServiceHelpButton .helpButton .uiButton:focus {
            outline: 1px solid #0A8080;
        }
        .refresh {
            bottom: 0;
            width: 100%;
            padding-left: 1rem;
            padding-right: 1rem;
            text-align: center;
            vertical-align: middle;
            justify-content: center;
            border: 1px solid #dddbda;
            transition: border .15s linear;
            background-color: #0070d2;
            border-color: #0070d2;
            color: #fff;
            border-radius: .25rem;
            line-height: 1.875rem;
        }
    </style>
    
    <script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
    <script type='text/javascript'>
        document.addEventListener(
            "setCustomField",
            function(event) {
                embedded_svc.settings.extraPrechatFormDetails[5].value = event.detail.customField;
                // Fire startChat callback.
                event.detail.callback();
            },
            false
        );
        var initESW = function(gslbBaseURL) {
            embedded_svc.settings.displayHelpButton = true; //Or false
            embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'
    
            embedded_svc.settings.defaultMinimizedText = 'Chat with a Captain'; //(Defaults to Chat with an Expert)
            embedded_svc.settings.disabledMinimizedText = 'No one online'; //(Defaults to Agent Offline)
    
            //embedded_svc.settings.loadingText = ''; //(Defaults to Loading)
            //embedded_svc.settings.storageDomain = 'yourdomain.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)
    
            // Settings for Chat
            console.log("@@@ Case Origin" + "{!Case.Origin}");
            embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
                if("{!Case.Origin}" !== "Phone") {
                    return "5731M000000D7G8";
                }
            };
            //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
            //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
            //embedded_svc.settings.offlineSupportMinimizedText = '...'; //(Defaults to Contact Us) 
            embedded_svc.settings.extraPrechatFormDetails = [{  
                "label": "Record Type",
                "value": "0121M000001YgUcQAK",
                "transcriptFields": [ "RecordTypeId" ],
                "displayToAgent": false
            },{  
                "label": "Record Type",
                "value": "{!$User.Id}",
                "transcriptFields": [ "Requested_By__c" ],
                "displayToAgent": true
            },{
                "label": "Case Number",
                "value": "{!Case.CaseNumber}",
                "displayToAgent": true
            }, {
                "label": "First Name",
                "value": "{!$User.FirstName}",
                "displayToAgent": true
            }, {
                "label": "Last Name",
                "value": "{!$User.LastName}",
                "displayToAgent": true
            },{
                "label": "User Role",
                "value": "{!$UserRole.Name}",
                "displayToAgent": true
            },{
                "label": "Chat Reason",
                "transcriptFields": [ "Chat_Reason__c" ],
                "displayToAgent": true
            }];
            embedded_svc.settings.extraPrechatInfo = [{
                "entityName": "Case",
                "saveToTranscript": "CaseId",
                "entityFieldMaps": [{
                    "isExactMatch": true,
                    "doCreate": false,
                    "doFind": true,
                    "label": "Case Number",
                    "fieldName": "CaseNumber"
                }]
            }, {
                "entityName": "Contact",
                "entityFieldMaps": [{
                    "isExactMatch": false,
                    "fieldName": "FirstName",
                    "doCreate": false,
                    "doFind": false,
                    "label": "First Name"
                }, {
                    "isExactMatch": false,
                    "fieldName": "LastName",
                    "doCreate": false,
                    "doFind": false,
                    "label": "Last Name"
                }]
            }]
                embedded_svc.settings.enabledFeatures = ['LiveAgent'];
                embedded_svc.settings.entryFeature = 'LiveAgent';
        
            embedded_svc.init(
                'https://gusto.my.salesforce.com',
                'https://gusto.secure.force.com/CXInternalChat',
                gslbBaseURL,
                '00DG0000000hKQi',
                'CX_Internal_Chat',
            {
                baseLiveAgentContentURL: 'https://c.la2-c2-iad.salesforceliveagent.com/content',
                deploymentId: '5721M000000HIaG',
                buttonId: '5731M000000D7G3',
                baseLiveAgentURL: 'https://d.la2-c2-iad.salesforceliveagent.com/chat',
                eswLiveAgentDevName: 'EmbeddedServiceLiveAgent_Parent04I1M000000KyjVUAS_1732b484afe',
                isOfflineSupportEnabled: false
                }
            );
        };

        if (!window.embedded_svc) {
            var s = document.createElement('script');
            s.setAttribute('src', 'https://gusto.my.salesforce.com/embeddedservice/5.0/esw.min.js');
            s.onload = function() {
                initESW(null);
            };
            document.body.appendChild(s);
        } else {
            initESW('https://service.force.com');
    }
    </script>
</apex:page>