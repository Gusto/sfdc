/**
 * @name         BTAdvocateCompCtrl
 * @author       Anand
 * @date         05-11-2020
 * @description  Test class for BTAdvocateCompCtrl class
 * @revisions    Date ------------ Name ------------ Comments
 **/
@istest
public class BTAdvocateCompCtrlTest {
	static testMethod void testmethod1() {
		OpportunityTriggerHelper.skipTrigger = true;
		AccountTriggerHelper.skipTrigger = true;
		BenefitOrderHelper.skipTrigger = true;
		BenefitOrderHelper.skipTaskCreation = true;
		BTAdvocateCompCtrl btComp = new BTAdvocateCompCtrl();
		btComp.strCohort = 'Active';
		btComp.UpdateUserView();
		btComp.strOOOTab = 'Active';
		btComp.UpdateUserView();
		btComp.strOpenTask = 'Active';
		btComp.UpdateUserView();

		// Check that strLoggedInUserId is correctly initialized
		System.assertNotEquals(btComp.strLoggedInUserId, null, 'strLoggedInUserId should not be null.');
		System.assertEquals(btComp.strLoggedInUserId, btComp.strUserId, 'strLoggedInUserId should be set to strUserId if no "userid" parameter is passed.');

		// Check that UpdateUserView returns a non-null PageReference
		PageReference pg = btComp.UpdateUserView();
		System.assertNotEquals(pg, null, 'PageReference returned by UpdateUserView should not be null.');

		// Assert that the PageReference URL contains the correct "userid" parameter
		String expectedUrl = '/apex/BTAdvocateOpenTaskView?userid=' + btComp.strLoggedInUserId;
		System.assert(pg.getUrl().contains(expectedUrl), 'The URL generated by UpdateUserView should contain the correct userid parameter.');
	}
}