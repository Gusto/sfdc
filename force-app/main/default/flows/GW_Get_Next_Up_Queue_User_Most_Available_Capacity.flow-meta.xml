<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Finish_Trace</name>
        <label>Finish Trace</label>
        <locationX>754</locationX>
        <locationY>1790</locationY>
        <actionName>GradientWorks__FinishFlowAction</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowApiName</name>
            <value>
                <stringValue>GW_Get_Next_Up_Queue_User_Most_Available_Capacity</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>flowInterviewGuid</name>
            <value>
                <stringValue>{!$Flow.InterviewGuid}</stringValue>
            </value>
        </inputParameters>
        <nameSegment>GradientWorks__FinishFlowAction</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Get_Class_1_Reps</name>
        <label>Get Class 1 Reps</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <actionName>GradientWorks__GWFXExecuteSOQLQueryAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_User_Count</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>U__records</typeName>
            <typeValue>GradientWorks__QueueUser__c</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>query</name>
            <value>
                <stringValue>SELECT Id, GradientWorks__User__r.Class_Queue__c, GradientWorks__Used_Capacity__c, GradientWorks__Last_Assignment_Time__c
FROM GradientWorks__QueueUser__c
WHERE 
  GradientWorks__User__r.Class_Queue__c = &apos;Class 1&apos;
  AND GradientWorks__Queue__c = &apos;{!Queue.Id}&apos;
  AND GradientWorks__Status__c = &apos;Available&apos;
  AND GradientWorks__Available_Capacity__c &gt;= {!Order.Total_Time_Commitment__c}
ORDER BY 
GradientWorks__Available_Capacity__c DESC</stringValue>
            </value>
        </inputParameters>
        <nameSegment>GradientWorks__GWFXExecuteSOQLQueryAction</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Classed_Queue_Users</assignToReference>
            <name>records</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Get_Class_2_3_Reps</name>
        <label>Get Class 2 &amp; 3 Reps</label>
        <locationX>182</locationX>
        <locationY>782</locationY>
        <actionName>GradientWorks__GWFXExecuteSOQLQueryAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_C2_C3_User_Count</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>U__records</typeName>
            <typeValue>GradientWorks__QueueUser__c</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>query</name>
            <value>
                <stringValue>SELECT Id, GradientWorks__User__r.Class_Queue__c, GradientWorks__Used_Capacity__c, GradientWorks__Last_Assignment_Time__c
FROM GradientWorks__QueueUser__c
WHERE 
  (GradientWorks__User__r.Class_Queue__c = &apos;Class 2&apos;
  OR GradientWorks__User__r.Class_Queue__c = &apos;Class 3&apos;)
  AND GradientWorks__Queue__c = &apos;{!Queue.Id}&apos;
  AND GradientWorks__Status__c = &apos;Available&apos;
  AND GradientWorks__Available_Capacity__c &gt;= {!Order.Total_Time_Commitment__c}
ORDER BY 
GradientWorks__Available_Capacity__c DESC</stringValue>
            </value>
        </inputParameters>
        <nameSegment>GradientWorks__GWFXExecuteSOQLQueryAction</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Classed_Queue_Users</assignToReference>
            <name>records</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Get_Class_2_Reps</name>
        <label>Get Class 2 Reps</label>
        <locationX>754</locationX>
        <locationY>458</locationY>
        <actionName>GradientWorks__GWFXExecuteSOQLQueryAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_C2_User_Count</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>U__records</typeName>
            <typeValue>GradientWorks__QueueUser__c</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>query</name>
            <value>
                <stringValue>SELECT Id, GradientWorks__User__r.Class_Queue__c, GradientWorks__Used_Capacity__c, GradientWorks__Last_Assignment_Time__c
FROM GradientWorks__QueueUser__c
WHERE 
  GradientWorks__User__r.Class_Queue__c = &apos;Class 2&apos;
  AND GradientWorks__Queue__c = &apos;{!Queue.Id}&apos;
  AND GradientWorks__Status__c = &apos;Available&apos;
  AND GradientWorks__Available_Capacity__c &gt;= {!Order.Total_Time_Commitment__c}
ORDER BY 
GradientWorks__Available_Capacity__c DESC</stringValue>
            </value>
        </inputParameters>
        <nameSegment>GradientWorks__GWFXExecuteSOQLQueryAction</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Classed_Queue_Users</assignToReference>
            <name>records</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Get_Class_3_Reps</name>
        <label>Get Class 3 Reps</label>
        <locationX>1458</locationX>
        <locationY>458</locationY>
        <actionName>GradientWorks__GWFXExecuteSOQLQueryAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_C3_User_Count</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>U__records</typeName>
            <typeValue>GradientWorks__QueueUser__c</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>query</name>
            <value>
                <stringValue>SELECT Id, GradientWorks__User__r.Class_Queue__c, GradientWorks__Used_Capacity__c, GradientWorks__Last_Assignment_Time__c
FROM GradientWorks__QueueUser__c
WHERE 
  GradientWorks__User__r.Class_Queue__c = &apos;Class 3&apos;
  AND GradientWorks__Queue__c = &apos;{!Queue.Id}&apos;
  AND GradientWorks__Status__c = &apos;Available&apos;
  AND GradientWorks__Available_Capacity__c &gt;= {!Order.Total_Time_Commitment__c}
ORDER BY 
GradientWorks__Available_Capacity__c DESC</stringValue>
            </value>
        </inputParameters>
        <nameSegment>GradientWorks__GWFXExecuteSOQLQueryAction</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Classed_Queue_Users</assignToReference>
            <name>records</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Failed_Assignment</name>
        <label>Log Failed Assignment</label>
        <locationX>1678</locationX>
        <locationY>782</locationY>
        <actionName>GradientWorks__LogAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_Error_Message</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>flowInterviewGuid</name>
            <value>
                <stringValue>{!$Flow.InterviewGuid}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>level</name>
            <value>
                <numberValue>7.0</numberValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>Failed to assign order {!Order.Id} because no users had capacity to accept the order</stringValue>
            </value>
        </inputParameters>
        <nameSegment>GradientWorks__LogAction</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Set_C2_C3_User_Count</name>
        <label>Set C2 &amp; C3 User Count</label>
        <locationX>182</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>Classed_User_Count</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Classed_Queue_Users</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_C2_or_C3_Users</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_C2_User_Count</name>
        <label>Set C2 User Count</label>
        <locationX>754</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>Classed_User_Count</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Classed_Queue_Users</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_Eligible_C2_Reps</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_C3_User_Count</name>
        <label>Set C3 User Count</label>
        <locationX>1458</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>Classed_User_Count</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Classed_Queue_Users</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_Eligible_C3_Reps</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Error_Message</name>
        <label>Set Error Message</label>
        <locationX>1678</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>Error_Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Error_Message_No_Capacity_Template</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Finish_Trace</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Next_Up_User</name>
        <label>Set Next Up User</label>
        <locationX>842</locationX>
        <locationY>1532</locationY>
        <assignmentItems>
            <assignToReference>NextUpUser</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_First_User</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Finish_Trace</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Order</name>
        <label>Set Order</label>
        <locationX>754</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>Order</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Order</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Order_Class_Designation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Overflow_Attempt</name>
        <label>Set Overflow Attempt</label>
        <locationX>1414</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>Overflow_Attempted</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_Class_2_Reps</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Overflow_Attempt0</name>
        <label>Set Overflow Attempt</label>
        <locationX>710</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>Overflow_Attempted</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_Class_3_Reps</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_User_Count</name>
        <label>Set User Count</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>Classed_User_Count</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Classed_Queue_Users</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_Eligible_C1_Reps</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Has_C2_or_C3_Users</name>
        <label>Has C2 or C3 Users?</label>
        <locationX>182</locationX>
        <locationY>998</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Log_Failed_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>False</defaultConnectorLabel>
        <rules>
            <name>Has_C2_or_C3_Users_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Classed_User_Count</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_First_User</targetReference>
            </connector>
            <label>True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Eligible_C1_Reps</name>
        <label>Has Eligible C1 Reps?</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Get_Class_2_3_Reps</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>False</defaultConnectorLabel>
        <rules>
            <name>Has_Eligible_C1_Reps_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Classed_User_Count</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_First_User</targetReference>
            </connector>
            <label>True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Eligible_C2_Reps</name>
        <label>Has Eligible C2 Reps?</label>
        <locationX>754</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Log_Failed_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Reps Available</defaultConnectorLabel>
        <rules>
            <name>Has_Eligible_C2_Reps_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Classed_User_Count</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_First_User</targetReference>
            </connector>
            <label>True</label>
        </rules>
        <rules>
            <name>Has_Eligible_C2_Reps_Overflow</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Classed_User_Count</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Overflow_Attempted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Overflow_Attempt0</targetReference>
            </connector>
            <label>Overflow</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Eligible_C3_Reps</name>
        <label>Has Eligible C3 Reps?</label>
        <locationX>1458</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Log_Failed_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Reps Available</defaultConnectorLabel>
        <rules>
            <name>Has_Eligible_C3_Repss_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Classed_User_Count</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_First_User</targetReference>
            </connector>
            <label>True</label>
        </rules>
        <rules>
            <name>Has_Eligible_C3_Reps_Overflow</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Classed_User_Count</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Overflow_Attempted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Overflow_Attempt</targetReference>
            </connector>
            <label>Overflow</label>
        </rules>
    </decisions>
    <decisions>
        <name>Order_Class_Designation</name>
        <label>Order Class Designation</label>
        <locationX>754</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Get_Class_3_Reps</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Class 3</defaultConnectorLabel>
        <rules>
            <name>Class_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Order.of_States__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.States__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>OH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.States__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>PA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.States__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>WA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Big_Desk_Sandbox_Type__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Order.Bulk_Migration__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Order.Account.AM_Tier__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Gold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Previous_Payroll_Provider__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Offline (downloaded reports)</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Previous_Payroll_Provider__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Offline (manual)</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Previous_Payroll_Provider__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Other</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Total_Active_Inactive_Contract_Count__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>50.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Class_1_Reps</targetReference>
            </connector>
            <label>Class 1</label>
        </rules>
        <rules>
            <name>Class_2</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 13) AND 12</conditionLogic>
            <conditions>
                <leftValueReference>Order.of_States__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>3.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.States__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>OH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.States__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.States__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.of_Benefits__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>3.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Big_Desk_Sandbox_Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Order.Bulk_Migration__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Order.Account.AM_Tier__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Previous_Payroll_Provider__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Offline (downloaded reports)</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Previous_Payroll_Provider__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Offline (manual)</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Previous_Payroll_Provider__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Other</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Opportunity.Owner_Division__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partner</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Order.Total_Active_Inactive_Contract_Count__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>50.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Class_2_Reps</targetReference>
            </connector>
            <label>Class 2</label>
        </rules>
    </decisions>
    <description>&quot;Get Class 3 Reps&quot; soql was referencing &quot;Class 2&quot; instead of &quot;Class 3&quot;</description>
    <environments>Default</environments>
    <interviewLabel>GW - Get Next Up Queue User - Most Available Capacity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>GW - PT - Get Next Up Queue User - Most Available Capacity</label>
    <loops>
        <name>Get_First_User</name>
        <label>Get First User</label>
        <locationX>754</locationX>
        <locationY>1424</locationY>
        <collectionReference>Classed_Queue_Users</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Set_Next_Up_User</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Finish_Trace</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Order</name>
        <label>Get Order</label>
        <locationX>754</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Order</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Order.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>628</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Order</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Error_Message_No_Capacity_Template</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Oops, there is no remaining capacity for the week entered for the order. Please select a different week to assign.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>All_User_Ids</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Classed_Queue_Users</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GradientWorks__QueueUser__c</objectType>
    </variables>
    <variables>
        <name>Classed_User_Count</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GradientWorks__QueueUser__c</objectType>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection_0</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GradientWorks__QueueUser__c</objectType>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection_0_0</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GradientWorks__QueueUser__c</objectType>
    </variables>
    <variables>
        <name>Error_Message</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>NextUpUser</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>GradientWorks__QueueUser__c</objectType>
    </variables>
    <variables>
        <name>Order</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <name>Overflow_Attempted</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Queue</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>GradientWorks__Queue__c</objectType>
    </variables>
</Flow>
