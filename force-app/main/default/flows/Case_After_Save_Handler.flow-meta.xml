<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>OB_Message_for_Forethought_Benefits_Care</name>
        <label>OB Message for Forethought Benefits Care</label>
        <locationX>2338</locationX>
        <locationY>539</locationY>
        <actionName>Case.Outbound_message_to_Forethought</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Publish_Case_to_ApIntego1</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Publish_Case_to_ApIntego1</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Outbound_message_to_Forethought</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>OB_Message_for_Forethought_Engagement</name>
        <label>OB Message for Forethought Engagement</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <actionName>Case.Outbound_message_to_Forethought</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Publish_Case_to_ApIntego_Engagement</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Publish_Case_to_ApIntego_Engagement</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Outbound_message_to_Forethought</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>OB_Message_for_Forethought_Payroll</name>
        <label>OB Message for Forethought Payroll</label>
        <locationX>1634</locationX>
        <locationY>539</locationY>
        <actionName>Case.Outbound_message_to_Forethought</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Publish_Case_to_ApIntego</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Publish_Case_to_ApIntego</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Outbound_message_to_Forethought</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>OB_to_Forethought_Modern_Bank</name>
        <label>OB message to Forethought - Modern Bank</label>
        <locationX>3042</locationX>
        <locationY>539</locationY>
        <actionName>Case.Outbound_message_to_Forethought</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Case_Modern_Bank_SubFlow_Helper</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Case_Modern_Bank_SubFlow_Helper</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Outbound_message_to_Forethought</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Outbound_message_to_Forethought</name>
        <label>Outbound message to Forethought</label>
        <locationX>5066</locationX>
        <locationY>539</locationY>
        <actionName>Case.Outbound_message_to_Forethought</actionName>
        <actionType>outboundMessage</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Outbound_message_to_Forethought</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Outbound_message_to_Forethought_Tax_Res</name>
        <label>Outbound message to Forethought - Tax Res</label>
        <locationX>930</locationX>
        <locationY>539</locationY>
        <actionName>Case.Outbound_message_to_Forethought</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Case_Tax_Res_SubFlow_Helper</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Case_Tax_Res_SubFlow_Helper</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Outbound_message_to_Forethought</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Publish_Case_info_to_APIntego</name>
        <label>Publish Case info to APIntego</label>
        <locationX>1634</locationX>
        <locationY>887</locationY>
        <actionName>Case.Publish_Case_info_to_APIntego</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Case_Payroll_Care_SubFlow_Helper</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Case_Payroll_Care_SubFlow_Helper</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Publish_Case_info_to_APIntego</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Publish_Case_info_to_APIntego1</name>
        <label>Publish Case info to APIntego</label>
        <locationX>2338</locationX>
        <locationY>887</locationY>
        <actionName>Case.Publish_Case_info_to_APIntego</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Case_Benefits_Care_SubFlow_Helper</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Case_Benefits_Care_SubFlow_Helper</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Publish_Case_info_to_APIntego</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Publish_Case_info_to_APIntego_Engagement</name>
        <label>Publish Case info to APIntego</label>
        <locationX>402</locationX>
        <locationY>1079</locationY>
        <actionName>Case.Publish_Case_info_to_APIntego</actionName>
        <actionType>outboundMessage</actionType>
        <connector>
            <targetReference>Call_Sub_Flow_Helper</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Publish_Case_info_to_APIntego</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Publish_Case_Info_To_Kafka</name>
        <label>Publish Case Info To Kafka</label>
        <locationX>3504</locationX>
        <locationY>1763</locationY>
        <actionName>Case.Publish_Case_Info_To_Kafka</actionName>
        <actionType>outboundMessage</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Case.Publish_Case_Info_To_Kafka</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <decisions>
        <description>Criteria preventing sub flow from running because it is not required. Example: Qualtrics survey update causing dummy update triggering validation to be met.</description>
        <name>Call_Sub_Flow_Helper</name>
        <label>Call Sub Flow Helper?</label>
        <locationX>534</locationX>
        <locationY>1271</locationY>
        <defaultConnector>
            <targetReference>Case_Engagement_SubFlow_Helper</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>(1 AND 2) OR (3 AND 4) OR 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Survey_Sent__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Survey_Sent__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Survey_Sent__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Survey_Sent_Date_Time__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Survey_Sent_Date_Time__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Survey_Sent_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Time_To_Resolution_Hours__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Time_To_Resolution_Hours__c</elementReference>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_TAM_Cae</name>
        <label>Check TAM Cae</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Publish_Case_to_ApIntego_Engagement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_TAM</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>is_Tam_Case</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OB_Message_for_Forethought_Engagement</targetReference>
            </connector>
            <label>Not TAM</label>
        </rules>
    </decisions>
    <decisions>
        <name>Outbound_Message_To_Forethought_Benefits_Care</name>
        <label>Outbound Message To Forethought - Benefits Care</label>
        <locationX>2602</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Publish_Case_to_ApIntego1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>true_OB_Message_For_Forethought_Payroll</name>
            <conditionLogic>1 AND (2 OR 3 OR 4) AND 5 AND NOT 6 AND NOT (7 OR 8) and NOT 9 and 10 and NOT 11 and NOT 12 and NOT 13 and 14 and NOT 15 and NOT 16 and 17 AND NOT 18 and 19 and NOT 20 and NOT 21 AND 22 AND 23</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Answer_IQ_Eligible__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gusto</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Care Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Suspension</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>microsoftoffice365@messaging.microsoft.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Gusto account by Dec 31</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>2019 to ensure accurate filings</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>POA Responses</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal deposit schedule to Semiweekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form to quarterly Form 941</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form and deposit schedule</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>External Covid Reporting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review filing requirement for Q1 2020</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review and update your 2020 state unemployment rate</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cobra</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We got your notice—you&apos;re in good hands</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Unclaimed Property</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid you late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Exempt Taxes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OB_Message_for_Forethought_Benefits_Care</targetReference>
            </connector>
            <label>true_OB_Message_For_Forethought_Payroll</label>
        </rules>
    </decisions>
    <decisions>
        <name>Outbound_message_to_Forethought_Engagement</name>
        <label>Outbound message to Forethought - Engagement</label>
        <locationX>534</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Publish_Case_to_ApIntego_Engagement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>true_OB_Message_Forethought_Engagement</name>
            <conditionLogic>1 AND 11 AND 2 AND NOT 3 AND NOT 4 AND NOT 5 AND 6 AND 7 AND 8 AND 9 AND 10 AND 12 AND 13 AND NOT 14 AND NOT 15 AND NOT 16 AND NOT 17 AND NOT 18 AND NOT 19 AND NOT 20 AND NOT 21 AND NOT 22 AND NOT 23</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Answer_IQ_Eligible__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Label.Agatha_Prediction_Case_Origin_Include</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>$Record.Origin</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gusto account by Dec 31</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Label.Agatha_Prediction_Email_Address_Exclude</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>$Record.SuppliedEmail</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Label.Agatha_Prediction_Routing_Case_Reason_Exclude</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>$Record.Routing_Case_Reason__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Suspension</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Gusto</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Unclaimed Property</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routed_through_Onboarding__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Authorized_User__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Gusto Global</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>BlnIsEngagementAlert</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2019 to ensure accurate filings</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>We paid your team late today</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal deposit schedule to Semiweekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form to quarterly Form 941</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form and deposit schedule</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>[Action required]: Review filing requirement for Q1 2020</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>[Action required]: Review and update your 2020 state unemployment rate</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>We got your notice—you&apos;re in good hands</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>We paid you late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>We paid your team late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_TAM_Cae</targetReference>
            </connector>
            <label>true_OB_Message_Forethought_Engagement</label>
        </rules>
    </decisions>
    <decisions>
        <name>Outbound_message_to_Forethought_Modern_Bank</name>
        <label>Outbound message to Forethought - Modern Bank</label>
        <locationX>3306</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Case_Modern_Bank_SubFlow_Helper</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>true_Modern_Bank_Forethought_OB_Message</name>
            <conditionLogic>1 AND (2 OR 3 OR 4) AND 5 AND NOT 6 AND NOT (7 OR 8) and NOT 9 and 10 and NOT 11 and NOT 12 and NOT 13 and 14 and NOT 15 and NOT 16 and 17 AND NOT 18 and 19 and NOT 20 and NOT 21 AND 22</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Answer_IQ_Eligible__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gusto</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Care Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Suspension</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>microsoftoffice365@messaging.microsoft.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Gusto account by Dec 31</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>2019 to ensure accurate filings</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>POA Responses</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal deposit schedule to Semiweekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form to quarterly Form 941</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form and deposit schedule</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>External Covid Reporting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review filing requirement for Q1 2020</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review and update your 2020 state unemployment rate</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cobra</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We got your notice—you&apos;re in good hands</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Unclaimed Property</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid you late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OB_to_Forethought_Modern_Bank</targetReference>
            </connector>
            <label>true_Modern_Bank_Forethought_OB_Message</label>
        </rules>
    </decisions>
    <decisions>
        <name>Outbound_message_to_Forethought_Payroll</name>
        <label>Outbound message to Forethought - Payroll</label>
        <locationX>1898</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Publish_Case_to_ApIntego</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>true_OB_Message_Forethought_Payroll</name>
            <conditionLogic>1 AND (2 OR 3 OR 4) AND 5 AND NOT 6 AND NOT (7 OR 8) and NOT 9 and 10 and NOT 11 and NOT 12 and NOT 13 and 14 and NOT 15 and NOT 16 and 17 AND NOT 18 and 19 and NOT 20 and NOT 21 AND 22 AND 23</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Answer_IQ_Eligible__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gusto</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Care Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Suspension</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>microsoftoffice365@messaging.microsoft.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Gusto account by Dec 31</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>2019 to ensure accurate filings</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>POA Responses</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal deposit schedule to Semiweekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form to quarterly Form 941</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form and deposit schedule</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>External Covid Reporting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review filing requirement for Q1 2020</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review and update your 2020 state unemployment rate</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cobra</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We got your notice—you&apos;re in good hands</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Unclaimed Property</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid you late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Exempt Taxes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OB_Message_for_Forethought_Payroll</targetReference>
            </connector>
            <label>true_OB_Message_Forethought_Payroll</label>
        </rules>
    </decisions>
    <decisions>
        <name>Outbound_message_to_Forethought_Risk</name>
        <label>Outbound message to Forethought - Risk</label>
        <locationX>5198</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>true_Risk_Assurance_Forethought_OB_Message</name>
            <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Assurance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Underwriting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Answer_IQ_Eligible__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_message_to_Forethought</targetReference>
            </connector>
            <label>true_Risk_Assurance_Forethought_OB_Message</label>
        </rules>
    </decisions>
    <decisions>
        <name>Outbound_messages_to_Forethought_Tax_Res_Routing</name>
        <label>Outbound messages to Forethought - Tax Res Routing</label>
        <locationX>1194</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Case_Tax_Res_SubFlow_Helper</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>true_Tax_Res_Forethought_OB_Message</name>
            <conditionLogic>(1 AND 2) OR (3 AND (4 OR 5 OR 6) AND 7 AND NOT 8 AND NOT (9 OR 10) and NOT 11 and 12 and NOT 13 and NOT 14 and NOT 15 and 16 and NOT 17 and NOT 18 and 19 AND NOT 20 and 21 and NOT 22 and NOT 23 AND 24)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.TaxRes_OBMsg_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Agency_Info_Agatha__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Answer_IQ_Eligible__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gusto</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Care Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Suspension</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>microsoftoffice365@messaging.microsoft.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Gusto account by Dec 31</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>2019 to ensure accurate filings</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>POA Responses</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal deposit schedule to Semiweekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form to quarterly Form 941</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>FYI: Gusto updated your federal tax filing form and deposit schedule</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>External Covid Reporting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review filing requirement for Q1 2020</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>[Action required]: Review and update your 2020 state unemployment rate</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cobra</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We got your notice—you&apos;re in good hands</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Unclaimed Property</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid you late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>We paid your team late today. We’re sorry.</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_message_to_Forethought_Tax_Res</targetReference>
            </connector>
            <label>true_Tax_Res_ Forethought_OB_Message</label>
        </rules>
    </decisions>
    <decisions>
        <name>Publish_Case_Enrollment_Information_to_Kafka</name>
        <label>Publish Case Enrollment Information to Kafka?</label>
        <locationX>5682</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Publish_Info_to_Kafka</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NHE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Enrollment_Id__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Historical_Data__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_Info_To_Kafka</targetReference>
            </connector>
            <label>Publish Info to Kafka</label>
        </rules>
    </decisions>
    <decisions>
        <name>Publish_Case_Enrollment_Information_to_Kafka_01</name>
        <label>Publish Case Enrollment Information to Kafka?</label>
        <locationX>6122</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Publish_Info_to_Kafka_01</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>QLE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Enrollment_Id__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Historical_Data__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_Info_To_Kafka</targetReference>
            </connector>
            <label>Publish Info to Kafka</label>
        </rules>
    </decisions>
    <decisions>
        <name>Publish_Case_to_ApIntego</name>
        <label>Publish Case to ApIntego?</label>
        <locationX>1898</locationX>
        <locationY>779</locationY>
        <defaultConnector>
            <targetReference>Case_Payroll_Care_SubFlow_Helper</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Publish_to_ApIntego</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Shared_With__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ApIntego</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Partner_Record_Id__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$User.Data_Migration_Validation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_info_to_APIntego</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Publish to ApIntego</label>
        </rules>
    </decisions>
    <decisions>
        <name>Publish_Case_to_ApIntego1</name>
        <label>Publish Case to ApIntego?</label>
        <locationX>2602</locationX>
        <locationY>779</locationY>
        <defaultConnector>
            <targetReference>Case_Benefits_Care_SubFlow_Helper</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Publish_to_ApIntego1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Shared_With__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ApIntego</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Partner_Record_Id__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$User.Data_Migration_Validation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_info_to_APIntego1</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Publish to ApIntego</label>
        </rules>
    </decisions>
    <decisions>
        <name>Publish_Case_to_ApIntego_Engagement</name>
        <label>Publish Case to ApIntego?</label>
        <locationX>534</locationX>
        <locationY>971</locationY>
        <defaultConnector>
            <targetReference>Call_Sub_Flow_Helper</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Publish_to_ApIntego_Engagement</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Shared_With__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ApIntego</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Partner_Record_Id__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$User.Data_Migration_Validation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_info_to_APIntego_Engagement</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Publish to ApIntego</label>
        </rules>
    </decisions>
    <decisions>
        <description>Add RecordType.DeveloperName to Entry Criteria</description>
        <name>RecordType_DeveloperName</name>
        <label>RecordType DeveloperName</label>
        <locationX>3504</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Engagement</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_message_to_Forethought_Engagement</targetReference>
            </connector>
            <label>Engagement</label>
        </rules>
        <rules>
            <name>Tax_Res</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tax_Res</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_messages_to_Forethought_Tax_Res_Routing</targetReference>
            </connector>
            <label>Tax Res</label>
        </rules>
        <rules>
            <name>Payroll_Care</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll_Care</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_message_to_Forethought_Payroll</targetReference>
            </connector>
            <label>Payroll Care</label>
        </rules>
        <rules>
            <name>Benefits_Care</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits_Care</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_Message_To_Forethought_Benefits_Care</targetReference>
            </connector>
            <label>Benefits Care</label>
        </rules>
        <rules>
            <name>Modern_Bank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Modern_Bank</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_message_to_Forethought_Modern_Bank</targetReference>
            </connector>
            <label>Modern Bank</label>
        </rules>
        <rules>
            <name>Payroll_Care_Read_Only</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll_Care_Read_Only</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Payroll_Care_Read_Only_SubFlow_Helper</targetReference>
            </connector>
            <label>Payroll Care - Read Only</label>
        </rules>
        <rules>
            <name>Benefits_Care_Read_Only</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits_Care_Read_Only</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Benefits_Care_Read_Only_SubFlow_Helper</targetReference>
            </connector>
            <label>Benefits Care - Read Only</label>
        </rules>
        <rules>
            <name>Payroll_Transfer_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll_Transfer_Case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Payroll_Transfer_SubFlow_Helper</targetReference>
            </connector>
            <label>Payroll Transfer Case</label>
        </rules>
        <rules>
            <name>Privacy_Request</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Privacy_Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Privacy_Request_SubFlow_Helper</targetReference>
            </connector>
            <label>Privacy Request</label>
        </rules>
        <rules>
            <name>GEP_CX</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GEP_CX</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_GEP_CX_SubFlow_Helper</targetReference>
            </connector>
            <label>GEP CX</label>
        </rules>
        <rules>
            <name>Risk_Assurance</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Risk_Assurance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_message_to_Forethought_Risk</targetReference>
            </connector>
            <label>Risk Assurance</label>
        </rules>
        <rules>
            <name>Member_Fulfillment_NHE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF_NHE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_Enrollment_Information_to_Kafka</targetReference>
            </connector>
            <label>Member Fulfillment - NHE</label>
        </rules>
        <rules>
            <name>Member_Fulfillment_QLE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF_QLE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Publish_Case_Enrollment_Information_to_Kafka_01</targetReference>
            </connector>
            <label>Member Fulfillment - QLE</label>
        </rules>
    </decisions>
    <description>This flow is our main Case Handler that will direct case record types to their main Record type sub flow containing the record type business logic. Post Updates PLEASE ensure the case record type is included in the Entry Criteria and our &quot;RecordType DeveloperName&quot; decision.
- Added exception for Engagement Alert Subjects
- Fix-All Engagement cases should go through Agatha prediction
-Added Logic to Exclude Gusto Global for Agatha prediction
-Email Alert Routing to General Alert Skill</description>
    <environments>Default</environments>
    <formulas>
        <name>BlnIsEngagementAlert</name>
        <dataType>Boolean</dataType>
        <expression>ISPICKVAL({!$Record.Engagement_Alert__c}, 	&apos;General Alert&apos;)</expression>
    </formulas>
    <formulas>
        <name>is_Tam_Case</name>
        <dataType>Boolean</dataType>
        <expression>OR(
  AND(
    TEXT({!$Record.Persona__c}) = &apos;Accountant&apos;,
    {!$Record.Account.RecordType.Name} = &apos;Reseller&apos;,
    NOT(ISNULL({!$Record.Account.Technical_Account_Manager__c}))
  ),
  AND(
    {!$Record.Account.RecordType.Name} = &apos;Company&apos;,
    NOT(ISNULL({!$Record.Account.Technical_Account_Manager__c})),
    TEXT({!$Record.Persona__c}) = &apos;Admin&apos;,
    OR(
      TEXT({!$Record.Company_Size__c}) = &apos;Grower 25-49&apos;,
      TEXT({!$Record.Company_Size__c}) = &apos;Grower 50&apos;
    )
  ),
  AND(
    TEXT({!$Record.Account.CX_Experiment__c}) = &apos;Project-GHR&apos;,
    TEXT({!$Record.Persona__c}) = &apos;Admin&apos;,
    NOT(ISNULL({!$Record.Account.Technical_Account_Manager__c}))
  )
)</expression>
    </formulas>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Case After Save Handler {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case After Save Handler</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>3378</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>RecordType_DeveloperName</targetReference>
        </connector>
        <filterFormula>{!$Record.RecordType.DeveloperName}=&apos;Tax_Res&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Payroll_Care&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Benefits_Care&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Modern_Bank&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Payroll_Care_Read_Only&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Benefits_Care_Read_Only&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Payroll_Transfer_Case&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Privacy_Request&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;GEP_CX&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;Risk_Assurance&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;MF_NHE&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;MF_QLE&apos; ||
            {!$Record.RecordType.DeveloperName}=&apos;MF_Termination&apos; ||
	        {!$Record.RecordType.DeveloperName}=&apos;Engagement&apos;</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <subflows>
        <description>Pass Payroll Care - Read Only  record to Case Payroll Care - Read Only SubFlow Helper.</description>
        <name>Case_Benefits_Care_Read_Only_SubFlow_Helper</name>
        <label>Case Benefits Care - Read Only SubFlow Helper</label>
        <locationX>4010</locationX>
        <locationY>431</locationY>
        <flowName>Case_Benefits_Care_Read_Only_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Pass objCase and objOldCase to RecordType subflow to Case Benefits Care SubFlow Helper</description>
        <name>Case_Benefits_Care_SubFlow_Helper</name>
        <label>Case Benefits Care SubFlow Helper</label>
        <locationX>2602</locationX>
        <locationY>1127</locationY>
        <flowName>Case_Benefits_Care_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Case_Engagement_SubFlow_Helper</name>
        <label>Case Engagement SubFlow Helper</label>
        <locationX>666</locationX>
        <locationY>1379</locationY>
        <flowName>Case_Engagement_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Case_GEP_CX_SubFlow_Helper</name>
        <label>Case GEP CX SubFlow Helper</label>
        <locationX>4802</locationX>
        <locationY>431</locationY>
        <flowName>Case_GEP_CX_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Pass objCase and objOldCase to RecordType subflow to Case Modern Bank SubFlow Helper</description>
        <name>Case_Modern_Bank_SubFlow_Helper</name>
        <label>Case Modern Bank SubFlow Helper</label>
        <locationX>3306</locationX>
        <locationY>779</locationY>
        <flowName>Case_Modern_Bank_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Pass Payroll Care - Read Only  record to Case Payroll Care - Read Only SubFlow Helper.</description>
        <name>Case_Payroll_Care_Read_Only_SubFlow_Helper</name>
        <label>Case Payroll Care - Read Only SubFlow Helper</label>
        <locationX>3746</locationX>
        <locationY>431</locationY>
        <flowName>Case_Payroll_Care_Read_Only_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Pass objCase and objOldCase to RecordType subflow to Case Payroll Care SubFlow Helper</description>
        <name>Case_Payroll_Care_SubFlow_Helper</name>
        <label>Case Payroll Care SubFlow Helper</label>
        <locationX>1898</locationX>
        <locationY>1127</locationY>
        <flowName>Case_Payroll_Care_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Case_Payroll_Transfer_SubFlow_Helper</name>
        <label>Case Payroll Transfer SubFlow Helper</label>
        <locationX>4274</locationX>
        <locationY>431</locationY>
        <flowName>Case_Payroll_Transfer_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Case_Privacy_Request_SubFlow_Helper</name>
        <label>Case Privacy Request SubFlow Helper</label>
        <locationX>4538</locationX>
        <locationY>431</locationY>
        <flowName>Case_Privacy_Request_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Pass objCase and objOldCase to RecordType subflow to Case Tax Res SubFlow Helper</description>
        <name>Case_Tax_Res_SubFlow_Helper</name>
        <label>Case Tax Res SubFlow Helper</label>
        <locationX>1194</locationX>
        <locationY>779</locationY>
        <flowName>Case_Tax_Res_SubFlow_Helper</flowName>
        <inputAssignments>
            <name>objCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>objOldCase</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <triggerOrder>300</triggerOrder>
</Flow>
