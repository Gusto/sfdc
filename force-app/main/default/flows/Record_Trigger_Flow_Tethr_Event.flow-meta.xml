<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>Assign count of open Benefits BoR opportunity to OpenBoROpportunityCount variable</description>
        <name>Assign_Opp_Record_Count</name>
        <label>Assign Opp Record Count</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>OpenBoROpportunityCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Check_for_open_opportunities</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Open_Opportunity_Does_Not_Exist</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set Benefits BoR Opp Created Flag to True for Bulkified Code</description>
        <name>Set_Benefits_BoR_Created</name>
        <label>Set Benefits BoR Created</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>Benefits_BoR_Created</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Check if call activity is logged by</description>
        <name>Is_Activity_Present</name>
        <label>Is Activity Present</label>
        <locationX>611</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Task_is_linked_to_an_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task_Recods.Account.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Partner_BOR_Opp_Event</targetReference>
            </connector>
            <label>Task is linked to an Account</label>
        </rules>
    </decisions>
    <decisions>
        <description>If no open Benefits BoR opportunity present for an account, then create new Benefits BoR Opportunity and set Lead Source as Tethr</description>
        <name>Open_Opportunity_Does_Not_Exist</name>
        <label>Open Opportunity Does Not Exist</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OpenBoROpportunityCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Benefits_BoR_Created</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_BoR_Opportunity_2</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>If Event name is &quot;Partner - BOR Opp&quot;, trigger BoR opportunity if no open opportunity exists for an account</description>
        <name>Partner_BOR_Opp_Event</name>
        <label>Partner- BOR Opp Event</label>
        <locationX>380</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Create_BoR_Opportunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partner - BOR Opp</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Benefits_BoR_Created</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_open_opportunities</targetReference>
            </connector>
            <label>Create BoR Opportunity</label>
        </rules>
    </decisions>
    <description>Used for automations to create opportunities, tasks when different category events are created in Tethr</description>
    <environments>Default</environments>
    <interviewLabel>Record Trigger Flow: Tethr Event {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Record Trigger Flow: Tethr Event</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Create new Benefits BoR Opportunity for the account linked on Activity and set Lead Source as Tethr</description>
        <name>Create_BoR_Opportunity_2</name>
        <label>Create BoR Opportunity</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>Set_Benefits_BoR_Created</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>Get_Task_Recods.Account.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LeadSource</field>
            <value>
                <stringValue>Tethr</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>012160000014JqkAAE</stringValue>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Check for open Benefits BoR opportunity for an Account (Record Type of Benefits BoR = 012160000014JqkAAE)</description>
        <name>Check_for_open_opportunities</name>
        <label>Check for open opportunities</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Opp_Record_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Task_Recods.Account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>012160000014JqkAAE</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get activity records based on Interaction Id. The Contact Id from Tethr Call must match the Genesys Interaction Id from Activity. Take the earliest call activity that has an Account (Record Type of Call = 01216000000WdR4AAK)</description>
        <name>Get_Task_Recods</name>
        <label>Get Task Recods</label>
        <locationX>611</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Activity_Present</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Genesys_Interaction_Id__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact_ID__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>01216000000WdR4AAK</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Task_Recods</targetReference>
        </connector>
        <object>Tethr__Tethr_Event__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>Benefits_BoR_Created</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>OpenBoROpportunityCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
