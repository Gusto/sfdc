<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Accountant_Persona</name>
        <label>Accountant Persona</label>
        <locationX>182</locationX>
        <locationY>3311</locationY>
        <assignmentItems>
            <assignToReference>$Record.Persona__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Accountant</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Global_Customer</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Admin_Persona</name>
        <label>Admin Persona</label>
        <locationX>446</locationX>
        <locationY>3311</locationY>
        <assignmentItems>
            <assignToReference>$Record.Persona__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Admin</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Global_Customer</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Care_Auto_Solve_PermSet_Id</name>
        <label>Assign Care Auto Solve PermSet Id</label>
        <locationX>446</locationX>
        <locationY>5051</locationY>
        <assignmentItems>
            <assignToReference>CareAutoSolveId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Solve_Permission_Sets.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Solve_Permission_Sets</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Case_Type_Gusto_Global</name>
        <label>Assign Case Type Gusto Global</label>
        <locationX>424</locationX>
        <locationY>3611</locationY>
        <assignmentItems>
            <assignToReference>$Record.Specialization__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Gusto Global</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Solve_Processed_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_CX_Labs_Id</name>
        <label>Assign CX Labs Id</label>
        <locationX>710</locationX>
        <locationY>5051</locationY>
        <assignmentItems>
            <assignToReference>CXLabsId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Solve_Permission_Sets.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Solve_Permission_Sets</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Engagement_Alert</name>
        <label>Assign Engagement Alert</label>
        <locationX>798</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Engagement_Alert__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>General Alert</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Solve_Processed_Flag_When_Blank_For_Alert</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Engagement_Alert2</name>
        <label>Assign Engagement Alert</label>
        <locationX>1106</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Engagement_Alert__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>General Alert</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Set_Solve_Processed_Flag_When_Blank_For_Alert</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Followup_Date_Change_Count</name>
        <label>Assign Followup Date Change Count</label>
        <locationX>4208</locationX>
        <locationY>803</locationY>
        <assignmentItems>
            <assignToReference>followupDateChangeCount</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Increment_Followup_Date_Change_Count</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Followup_Date_Change_Count_1</name>
        <label>Assign Followup Date Change Count</label>
        <locationX>4472</locationX>
        <locationY>803</locationY>
        <assignmentItems>
            <assignToReference>followupDateChangeCount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Followup_Date_Change_Count__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>followupDateChangeCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Increment_Followup_Date_Change_Count</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Owner_Id</name>
        <label>Assign Owner Id</label>
        <locationX>5594</locationX>
        <locationY>2219</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Payroll_Care_Auto_Close.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Owner_Id_01</name>
        <label>Assign Owner Id</label>
        <locationX>6650</locationX>
        <locationY>2219</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Benefits_Care_Auto_Close.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Owner_Id_1</name>
        <label>Assign Owner Id</label>
        <locationX>5858</locationX>
        <locationY>2219</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Payroll_Care_Non_Actionable.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Owner_Id_2</name>
        <label>Assign Owner Id</label>
        <locationX>578</locationX>
        <locationY>6035</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Engagement_Auto_Close.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Owner_Id_3</name>
        <label>Assign Owner Id</label>
        <locationX>842</locationX>
        <locationY>6035</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Engagement_Non_Actionable.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Status_Eligible</name>
        <label>Assign Status Eligible</label>
        <locationX>94</locationX>
        <locationY>5543</locationY>
        <assignmentItems>
            <assignToReference>$Record.Auto_Solve_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Eligible</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Engagement_Path</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Status_Perm_not_Assigned</name>
        <label>Assign Status Perm not Assigned</label>
        <locationX>358</locationX>
        <locationY>5543</locationY>
        <assignmentItems>
            <assignToReference>$Record.Auto_Solve_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Permission Not Granted</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Engagement_Path</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Subject_to_Case</name>
        <label>Assign Subject to Case</label>
        <locationX>7706</locationX>
        <locationY>2003</locationY>
        <assignmentItems>
            <assignToReference>$Record.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetCaseSubjectForNHE_QLE_Termination</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_TaDa_EOY_Specialization</name>
        <label>Assign TaDa - EOY Specialization and Alert</label>
        <locationX>1370</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Answer_IQ_Eligible__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Specialization__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>TaDa - EOY</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Answer_IQ_Processed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Engagement_Alert__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>General Alert</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Set_Solve_Processed_Flag_When_Blank_For_Alert</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_TaDa_EOY_Specialization2</name>
        <label>Assign TaDa - EOY Specialization and Alert</label>
        <locationX>1634</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Answer_IQ_Eligible__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Specialization__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>TaDa - EOY</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Answer_IQ_Processed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Engagement_Alert__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>General Alert</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Set_Solve_Processed_Flag_When_Blank_For_Alert</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_Benefits_Care_Read_Only</name>
        <label>Assignment Benefits Care - Read Only</label>
        <locationX>3218</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Skip_Survey__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Confirm_Case_Reason_Classification__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Reason_Classifications_for_Benefits.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Routing_Case_Reason_Classification__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Reason_Classifications_for_Benefits.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Engagement_Benefits_Unauthorized_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Automation_Message_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_Engagement</name>
        <label>Assignment Engagement</label>
        <locationX>314</locationX>
        <locationY>6035</locationY>
        <assignmentItems>
            <assignToReference>$Record.Skip_Survey__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Confirm_Case_Reason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Unauthorized_Case_Reason.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Routing_Case_Reason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Unauthorized_Case_Reason.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Automation_Message_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_NPS_Survey_Response</name>
        <label>Assignment NPS Survey Response</label>
        <locationX>1898</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Skip_Survey__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Confirm_Case_Reason_Classification__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Reason_Classifications_for_Payroll_1.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Send_Survey__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Audience__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Employer</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Error_Origin__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No Error</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Routing_Case_Reason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Response to NPS Survey</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_NPS_Survey_Response_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Confirm_Case_Reason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No Action Required</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assignment_Payroll_Care_Read_Only</name>
        <label>Assignment Payroll Care - Read Only</label>
        <locationX>5154</locationX>
        <locationY>2327</locationY>
        <assignmentItems>
            <assignToReference>$Record.Skip_Survey__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Confirm_Case_Reason_Classification__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Reason_Classifications_for_Payroll.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Routing_Case_Reason_Classification__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Reason_Classifications_for_Payroll.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Engagement_Payroll_Unauthorized_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Automation_Message_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Default_Persona</name>
        <label>Default Persona</label>
        <locationX>974</locationX>
        <locationY>3311</locationY>
        <assignmentItems>
            <assignToReference>$Record.Persona__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Admin</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Global_Customer</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Member_Persona</name>
        <label>Member Persona</label>
        <locationX>710</locationX>
        <locationY>3311</locationY>
        <assignmentItems>
            <assignToReference>$Record.Persona__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Member</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Global_Customer</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Date_Time_Submitted_and_Request_Deadline</name>
        <label>Set Date Time Submitted and Request Deadline</label>
        <locationX>7178</locationX>
        <locationY>2111</locationY>
        <assignmentItems>
            <assignToReference>$Record.Date_Time_Submitted__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Request_Deadline__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varRequestDeadlineDate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Set deflection status &amp; auto response email content on case.</description>
        <name>Set_Deflection_Status</name>
        <label>Set Deflection Status</label>
        <locationX>50</locationX>
        <locationY>5927</locationY>
        <assignmentItems>
            <assignToReference>$Record.Auto_Response_Email_Content__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Routing_Case_Reason_Classification__r.Email_Content__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Deflection_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue> Confidence Threshold not met</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Internal_AI_Processed_to_No</name>
        <label>Set Internal AI Processed to No</label>
        <locationX>292</locationX>
        <locationY>4127</locationY>
        <assignmentItems>
            <assignToReference>$Record.Internal_AI_Processed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Owner_Changed</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Internal_AI_Processed_to_No_For_Alerts</name>
        <label>Set Internal AI Processed to No For Alerts</label>
        <locationX>666</locationX>
        <locationY>2843</locationY>
        <assignmentItems>
            <assignToReference>$Record.Internal_AI_Processed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_the_subject_lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Is_Escalated_To_True</name>
        <label>Set Is Escalated To True</label>
        <locationX>1106</locationX>
        <locationY>5927</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsEscalated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Solve_Processed_to_No</name>
        <label>Set Solve Processed to No</label>
        <locationX>292</locationX>
        <locationY>3827</locationY>
        <assignmentItems>
            <assignToReference>$Record.Solve_Processed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Internal_AI_Processed_Flag_When_Blank</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Solve_Processed_to_No_For_Alerts</name>
        <label>Set Solve Processed to No For Alerts</label>
        <locationX>666</locationX>
        <locationY>2543</locationY>
        <assignmentItems>
            <assignToReference>$Record.Solve_Processed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Internal_AI_Processed_Flag_When_Blank_For_Alert</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Benefits_Care_Read_Only_Route</name>
        <label>Benefits Care - Read Only Route</label>
        <locationX>6650</locationX>
        <locationY>2003</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Engagement_Benefits_Unauthorized</name>
            <conditionLogic>(1 OR (2 AND 3 AND NOT(4 OR 5 OR 6 OR 7 OR 8 OR 9))) AND NOT(10 OR 11)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Benefits_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Authorized_User__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Suspension Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EE Status Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Shareholder Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Company Taxability Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Owner Status audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cobra</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Get_Case_Reason_Classifications_for_Benefits</targetReference>
            </connector>
            <label>Engagement - Benefits Unauthorized</label>
        </rules>
        <rules>
            <name>Benefits_Care_Auto_Close</name>
            <conditionLogic>1 AND 2 AND NOT(3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.System_User_Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Benefits_Care_Auto_Close</targetReference>
            </connector>
            <label>Benefits Care - Auto Close</label>
        </rules>
    </decisions>
    <decisions>
        <name>Benefits_Care_Route</name>
        <label>Benefits Care Route</label>
        <locationX>3350</locationX>
        <locationY>2003</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Confidence_Threshold_Not_Met</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varConfidenceThresholdNotMet</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Set_Deflection_Status</targetReference>
            </connector>
            <label>Confidence Threshold Not Met</label>
        </rules>
        <rules>
            <name>Engagement_Benefits_Unauthorized_1</name>
            <conditionLogic>1 AND NOT(2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Benefits_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Reason_Classifications_for_Benefits</targetReference>
            </connector>
            <label>Engagement - Benefits Unauthorized</label>
        </rules>
        <rules>
            <name>Escalation_Flag_01</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Escalatedto__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Set_Is_Escalated_To_True</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Escalation Flag</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Auto_Solve_Permission</name>
        <label>Check Auto-Solve Permission</label>
        <locationX>358</locationX>
        <locationY>5435</locationY>
        <defaultConnector>
            <targetReference>Engagement_Path</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Permission_Assigned</name>
            <conditionLogic>((1 AND 4) OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>Get_Forethought_Solve_Response</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Internal_Solve_Response</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_PermissionSetAssignments</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Forethought_Solve_Response.forethought__EmailContentHTML__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Status_Eligible</targetReference>
            </connector>
            <label>Permission Assigned</label>
        </rules>
        <rules>
            <name>Permission_not_Assigned</name>
            <conditionLogic>((1 AND 4) OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>Get_Forethought_Solve_Response</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Internal_Solve_Response</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_PermissionSetAssignments</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Forethought_Solve_Response.forethought__EmailContentHTML__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Status_Perm_not_Assigned</targetReference>
            </connector>
            <label>Permission not Assigned</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Followup_Date_Count_Is_Blank</name>
        <label>Check Followup Date Count Is Blank</label>
        <locationX>4340</locationX>
        <locationY>695</locationY>
        <defaultConnector>
            <targetReference>Assign_Followup_Date_Change_Count_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Check_Followup_Date_Count_Is_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Followup_Date_Change_Count__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Followup_Date_Change_Count</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_LSI_Field</name>
        <label>Check LSI Field</label>
        <locationX>4538</locationX>
        <locationY>2003</locationY>
        <defaultConnector>
            <targetReference>Status_Path</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Present</name>
            <conditionLogic>(1 AND 2) OR (2 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>IsNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Large_Scale_Issue_Classification__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Large_Scale_Issue_Classification__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_fields</targetReference>
            </connector>
            <label>Present</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Name</name>
        <label>Check Name</label>
        <locationX>710</locationX>
        <locationY>4943</locationY>
        <defaultConnector>
            <targetReference>Loop_Over_Solve_Permission_Sets</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Care_Auto_Solve</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Solve_Permission_Sets.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care_Auto_Solve</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Care_Auto_Solve_PermSet_Id</targetReference>
            </connector>
            <label>Care Auto Solve</label>
        </rules>
        <rules>
            <name>CX_Labs</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Solve_Permission_Sets.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CX_Labs_Permission_Set</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_CX_Labs_Id</targetReference>
            </connector>
            <label>CX Labs</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Owner_Is_Paryoll_Care_Routing</name>
        <label>Check Owner Is Paryoll Care Routing</label>
        <locationX>4538</locationX>
        <locationY>1487</locationY>
        <defaultConnector>
            <targetReference>RecordType_Decision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Check_Owner_Is_Paryoll_Care_Routing</name>
            <conditionLogic>1 AND 2 AND NOT(3) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll Care Routing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Payroll Care</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$User.Data_Migration_Validation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Payroll_Care_Record_Type</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Status</name>
        <label>Check Status</label>
        <locationX>7310</locationX>
        <locationY>2003</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Submitted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Submitted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Privacy_Requester_Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Date_Time_Submitted__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Date_Time_Submitted_and_Request_Deadline</targetReference>
            </connector>
            <label>Submitted</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Status_Updated</name>
        <label>Check Status Updated</label>
        <locationX>4538</locationX>
        <locationY>1187</locationY>
        <defaultConnector>
            <targetReference>Check_Owner_Is_Paryoll_Care_Routing</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Check_Status_Updated</name>
            <conditionLogic>(1 OR 2 OR 3) OR (4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Submitted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status_Follow_Up__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status_Follow_Up__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MF_Update_automation_date_when_status</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>check if the Subject matches with Subject line from the custom metadata</description>
        <name>Does_it_match_with_case_subject</name>
        <label>Does it match with case subject</label>
        <locationX>1338</locationX>
        <locationY>2219</locationY>
        <defaultConnector>
            <targetReference>Loop_through_the_subject_lines</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Exact_Match_General_Alert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Match_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exact</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Loop_through_the_subject_lines.Subject_Line__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Alert_Routing__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement Alert</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Engagement_Alert</targetReference>
            </connector>
            <label>Exact Match - General Alert</label>
        </rules>
        <rules>
            <name>Partial_Match_General_Alert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Match_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>Loop_through_the_subject_lines.Subject_Line__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Alert_Routing__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement Alert</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Engagement_Alert2</targetReference>
            </connector>
            <label>Partial Match - General Alert</label>
        </rules>
        <rules>
            <name>Exact_Match_TaDa_EOY</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Match_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exact</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Loop_through_the_subject_lines.Subject_Line__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Alert_Routing__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TaDa - EOY</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_TaDa_EOY_Specialization</targetReference>
            </connector>
            <label>Exact Match - TaDa EOY</label>
        </rules>
        <rules>
            <name>Partial_Match_TaDa_EOY</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Match_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>Loop_through_the_subject_lines.Subject_Line__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_through_the_subject_lines.Alert_Routing__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TaDa - EOY</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_TaDa_EOY_Specialization2</targetReference>
            </connector>
            <label>Partial Match - TaDa EOY</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check for Electronic Notice origin cases</description>
        <name>Electronic_Notice_Case_Check</name>
        <label>Electronic Notice Case Check</label>
        <locationX>4186</locationX>
        <locationY>2711</locationY>
        <defaultConnector>
            <targetReference>Update_Automation_Message_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_BED_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Electronic Notice</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Electronic_Notice_Update_Automation_Message</targetReference>
            </connector>
            <label>Is BED Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>Engagement_Path</name>
        <label>Engagement Path</label>
        <locationX>578</locationX>
        <locationY>5819</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Owned_by_Auto_Solve_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>{!$Setup.Engagement_Flow_Configuration__c.Engagement_Auto_Solve_Queue_Id__c}</stringValue>
                </rightValue>
            </conditions>
            <label>Case Owned by Auto Solve Queue</label>
        </rules>
        <rules>
            <name>Confidence_Threshold_Not_Met_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varConfidenceThresholdNotMet</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Deflection_Status</targetReference>
            </connector>
            <label>Confidence Threshold Not Met</label>
        </rules>
        <rules>
            <name>Engagement_Unauthorized</name>
            <conditionLogic>(1 OR 2) AND NOT(3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Payroll_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Benefits_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Unauthorized_Case_Reason</targetReference>
            </connector>
            <label>Engagement - Unauthorized</label>
        </rules>
        <rules>
            <name>Engagement_Auto_Close</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.System_User_Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Engagement_Auto_Close</targetReference>
            </connector>
            <label>Engagement-Auto Close</label>
        </rules>
        <rules>
            <name>Engagement_Non_Actionable</name>
            <conditionLogic>1 AND 2 AND NOT(3 OR 4 OR 5 OR 6) AND 7</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Payroll_Care_Auto_Close</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Payroll_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Canceled_Chats</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care_Visitor_Abandoned_Chats</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Phone</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Engagement_Non_Actionable</targetReference>
            </connector>
            <label>Engagement - Non Actionable</label>
        </rules>
        <rules>
            <name>Escalation_Flag_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Escalatedto__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Is_Escalated_To_True</targetReference>
            </connector>
            <label>Escalation Flag</label>
        </rules>
    </decisions>
    <decisions>
        <name>Global_Customer</name>
        <label>Global Customer?</label>
        <locationX>578</locationX>
        <locationY>3503</locationY>
        <defaultConnector>
            <targetReference>Owner_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>((1 AND 2) OR 3) AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact.Account.Help_Journey_Routing__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Gusto Global</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>emailDomain</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>remote.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Persona__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Member</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_Type_Gusto_Global</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Case_Reopened</name>
        <label>Is Case Reopened</label>
        <locationX>8102</locationX>
        <locationY>2003</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Reopened</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_the_Case_Owner_as_Current_User</targetReference>
            </connector>
            <label>Case Reopened</label>
        </rules>
    </decisions>
    <decisions>
        <name>Owner_Changed</name>
        <label>Owner Changed?</label>
        <locationX>578</locationX>
        <locationY>4403</locationY>
        <defaultConnector>
            <targetReference>Engagement_Path</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>OwnerChanged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Forethought_Solve_Response</targetReference>
            </connector>
            <label>Owner Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Payroll_Care_Read_Only_Route</name>
        <label>Payroll Care - Read Only Route</label>
        <locationX>5638</locationX>
        <locationY>2003</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Engagement_Payroll_Unauthorized</name>
            <conditionLogic>(1 OR (2 AND 3 AND NOT(4 OR 5 OR 6))) AND NOT(7 OR 8)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Payroll_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Authorized_User__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Otter Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EOY Spot Check</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cobra</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Reason_Classifications_for_Payroll</targetReference>
            </connector>
            <label>Engagement - Payroll Unauthorized</label>
        </rules>
        <rules>
            <name>Engagement_Unauthorized_User</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND NOT(5 OR 6 OR 7 OR 8) AND 9 AND NOT(10 OR 11)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Authorized_User__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Historical_Data__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Skip_Auto_Response__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varRequesterEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>guideline.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varRequesterEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>apintego.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varRequesterEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>myhrsupportcenter.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varRequesterEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>hranswerlink.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Routing_Case_Reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Response to NPS Survey</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Automation_Message_2</targetReference>
            </connector>
            <label>Engagement - Unauthorized User</label>
        </rules>
        <rules>
            <name>Payroll_Care_Auto_Close</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.System_User_Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Payroll_Care_Auto_Close</targetReference>
            </connector>
            <label>Payroll Care - Auto Close</label>
        </rules>
        <rules>
            <name>Payroll_Care_Non_Actionable</name>
            <conditionLogic>1 AND 2 AND NOT(3 OR 4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll_Care_Auto_Close</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Payroll_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Canceled_Chats</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Payroll_Care_Non_Actionable</targetReference>
            </connector>
            <label>Payroll Care - Non Actionable</label>
        </rules>
    </decisions>
    <decisions>
        <name>Payroll_Care_Route</name>
        <label>Payroll Care Route</label>
        <locationX>2162</locationX>
        <locationY>2003</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Confidence_Threshold_Not_Met_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varConfidenceThresholdNotMet</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Set_Deflection_Status</targetReference>
            </connector>
            <label>Confidence Threshold Not Met</label>
        </rules>
        <rules>
            <name>NPS_Survey_Response</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>NPS Survey Response</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Reason_Classifications_for_Payroll_1</targetReference>
            </connector>
            <label>NPS Survey Response</label>
        </rules>
        <rules>
            <name>Engagement_Payroll_Unauthorized_1</name>
            <conditionLogic>1 AND NOT(2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement_Payroll_Unauthorized</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Automation_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Get_Case_Reason_Classifications_for_Payroll</targetReference>
            </connector>
            <label>Engagement - Payroll Unauthorized</label>
        </rules>
        <rules>
            <name>Escalation_Flag</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Escalatedto__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Set_Is_Escalated_To_True</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Escalation Flag</label>
        </rules>
    </decisions>
    <decisions>
        <description>Assign Persona on the case.</description>
        <name>Persona_Assignment</name>
        <label>Persona Assignment</label>
        <locationX>578</locationX>
        <locationY>3203</locationY>
        <defaultConnector>
            <targetReference>Default_Persona</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Accountant</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact.ZP_User_Role__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Accountant</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Accountant_Persona</targetReference>
            </connector>
            <label>Accountant</label>
        </rules>
        <rules>
            <name>Admin</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact.ZP_User_Role__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Admin</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.ZP_User_Role__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Signatory</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Admin_Persona</targetReference>
            </connector>
            <label>Admin</label>
        </rules>
        <rules>
            <name>Member</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact.ZP_User_Role__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Employee</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.ZP_User_Role__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Contractor</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Member_Persona</targetReference>
            </connector>
            <label>Member</label>
        </rules>
    </decisions>
    <decisions>
        <description>Case Record type path</description>
        <name>RecordType_Decision</name>
        <label>RecordType Decision</label>
        <locationX>4538</locationX>
        <locationY>1895</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Engagement</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Engagement</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Subject_Lines_for_Engagement_Alert</targetReference>
            </connector>
            <label>Engagement</label>
        </rules>
        <rules>
            <name>Payroll_Care</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll_Care</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Payroll_Care_Route</targetReference>
            </connector>
            <label>Payroll Care</label>
        </rules>
        <rules>
            <name>Benefits_Care</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits_Care</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Benefits_Care_Route</targetReference>
            </connector>
            <label>Benefits Care</label>
        </rules>
        <rules>
            <name>Tax_Res</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tax_Res</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_LSI_Field</targetReference>
            </connector>
            <label>Tax Res</label>
        </rules>
        <rules>
            <name>Payroll_Care_Read_Only</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payroll_Care_Read_Only</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Payroll_Care_Read_Only_Route</targetReference>
            </connector>
            <label>Payroll Care - Read Only</label>
        </rules>
        <rules>
            <name>Benefits_Care_Read_Only</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits_Care_Read_Only</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Benefits_Care_Read_Only_Route</targetReference>
            </connector>
            <label>Benefits Care - Read Only</label>
        </rules>
        <rules>
            <name>Privacy_Request</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Privacy_Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Status</targetReference>
            </connector>
            <label>Privacy Request</label>
        </rules>
        <rules>
            <name>Set_Case_Subject_NHE_QLE_Termination_Updates</name>
            <conditionLogic>( 1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR ( 9 AND (  12 OR 13 OR 14  )  ) OR ( 10 AND (  12 OR 13 OR 14  )  )  OR ( 11 AND (  12 OR 13 OR 14  )  )  ) AND 15 AND 16</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits BoR - QLE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits BoR - NHE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits BoR - Termination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF QLE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF NHE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Termination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Member/Group Updates</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits BoR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits New Plan Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits Renewal Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Termination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NHE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>QLE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Historical_Data__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>EvaluateSetCaseSubjectCondition</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Subject_to_Case</targetReference>
            </connector>
            <label>Set Case Subject - NHE, QLE, Termination, Updates</label>
        </rules>
        <rules>
            <name>Compliance</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Compliance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Case_Reopened</targetReference>
            </connector>
            <label>Compliance</label>
        </rules>
    </decisions>
    <decisions>
        <name>Research_Email_Alert_Criteria</name>
        <label>Research Email Alert Criteria</label>
        <locationX>4186</locationX>
        <locationY>2411</locationY>
        <defaultConnectorLabel>Don&apos;t Send</defaultConnectorLabel>
        <rules>
            <name>Send_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varResearchEmailCriteria</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Electronic_Notice_Case_Check</targetReference>
            </connector>
            <label>Send</label>
        </rules>
        <rules>
            <name>When_P_I_Autosolve_is_declined</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varResearchEmailWhenPnIDeclines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Electronic_Notice_Case_Check</targetReference>
            </connector>
            <label>When P&amp;I Autosolve is declined</label>
        </rules>
    </decisions>
    <decisions>
        <description>This node defaults Internal AI processed flag to No, to avoid duplicate omni flow triggers</description>
        <name>Set_Internal_AI_Processed_Flag_When_Blank</name>
        <label>Set Internal AI Processed Flag When Blank</label>
        <locationX>424</locationX>
        <locationY>4019</locationY>
        <defaultConnector>
            <targetReference>Owner_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Internal_AI_Processed_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Internal_AI_Processed__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Internal_AI_Processed_to_No</targetReference>
            </connector>
            <label>Internal AI Processed Blank?</label>
        </rules>
    </decisions>
    <decisions>
        <description>This node defaults solve processed flag to No, to avoid duplicate omni flow triggers</description>
        <name>Set_Internal_AI_Processed_Flag_When_Blank_For_Alert</name>
        <label>Set Internal AI Processed Flag When Blank For Alert</label>
        <locationX>798</locationX>
        <locationY>2735</locationY>
        <defaultConnector>
            <targetReference>Loop_through_the_subject_lines</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Internal_AI_Processed_Blank_For_Alert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Internal_AI_Processed__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Internal_AI_Processed_to_No_For_Alerts</targetReference>
            </connector>
            <label>Internal AI Processed Blank For Alert?</label>
        </rules>
    </decisions>
    <decisions>
        <description>This node defaults solve processed flag to No, to avoid duplicate omni flow triggers</description>
        <name>Set_Solve_Processed_Flag</name>
        <label>Set Solve Processed Flag When Blank</label>
        <locationX>424</locationX>
        <locationY>3719</locationY>
        <defaultConnector>
            <targetReference>Set_Internal_AI_Processed_Flag_When_Blank</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Solve_Processed_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Solve_Processed__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Solve_Processed_to_No</targetReference>
            </connector>
            <label>Solve Processed Blank?</label>
        </rules>
    </decisions>
    <decisions>
        <description>This node defaults solve processed flag to No, to avoid duplicate omni flow triggers</description>
        <name>Set_Solve_Processed_Flag_When_Blank_For_Alert</name>
        <label>Set Solve Processed Flag When Blank For Alert</label>
        <locationX>798</locationX>
        <locationY>2435</locationY>
        <defaultConnector>
            <targetReference>Set_Internal_AI_Processed_Flag_When_Blank_For_Alert</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Solve_Processed_Blank_For_Alert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Solve_Processed__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Solve_Processed_to_No_For_Alerts</targetReference>
            </connector>
            <label>Solve Processed Blank For Alert?</label>
        </rules>
    </decisions>
    <decisions>
        <description>Email alert trigger. These paths will update a multi picklist field on case before save that will trigger email alert in our after save flow.</description>
        <name>Status_Path</name>
        <label>Status Path</label>
        <locationX>4538</locationX>
        <locationY>2303</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Research_in_progress</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Research in progress</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tax Res</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Solved</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Research_Email_Alert_Criteria</targetReference>
            </connector>
            <label>Research in progress</label>
        </rules>
        <rules>
            <name>Escalation_Flag_02</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Escalatedto__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Set_Is_Escalated_To_True</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Escalation Flag</label>
        </rules>
    </decisions>
    <decisions>
        <name>Track_Followup_Date_Change</name>
        <label>Track Followup Date Change</label>
        <locationX>4538</locationX>
        <locationY>587</locationY>
        <defaultConnector>
            <targetReference>Check_Status_Updated</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Track_Followup_Date_Change_Count</name>
            <conditionLogic>( 1 AND 2 AND 3 ) AND ( 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 ) AND 11</conditionLogic>
            <conditions>
                <leftValueReference>IsNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Follow_Up_Date__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Follow_Up_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Member/Group Updates</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF NHE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF QLE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Termination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Member Fulfillment Emails</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Group Updates</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Historical_Data__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Followup_Date_Count_Is_Blank</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Update_First_Response_Start_Time_30</name>
        <label>Update First Response Start Time &lt; 30</label>
        <locationX>4538</locationX>
        <locationY>287</locationY>
        <defaultConnector>
            <targetReference>Track_Followup_Date_Change</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Update_First_Response_Start_Time_30</name>
            <conditionLogic>1 AND ( 2 OR 3 OR 4 ) AND ( ( 5 AND 6 ) OR ( 7 AND 6) ) AND 8 AND NOT( 9 ) AND 10</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Draft</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF QLE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Termination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MF Member/Group Updates</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Anticipated_Effective_Date__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Next_30_Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.First_Response_Start_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Termination_Date__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Next_30_Days</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Historical_Data__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Integration_Key__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>BASIC</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>PLEASE make changes on top of this version going forward

Ela - Update the when to execute option for Check Status Updated block
- Shyam: Updated TaxRes Research in progress email
- Shyam: Added P&amp;I Autosolve conditions for Research in progress email
- Corrected Deflection Status for Engagement path
- Latest UAT copy + FBED changes to include FBED email content for TFIR
Ela - Added FBED changes
Ela: Deployed latest from main branch. Main Before Save Flow. PLEASE ADD RECORD TYPE IN START CONDITIONS WHEN ADDING NEW LOGIC.
- Added Bypass Flows logic.
- Shyam: Added LSI Classification field logic
- Email Alert Routing to General Alert Skill (updated the logic to use &apos;Starts With&apos; instead of a Exact match)
- Solve Case - Replies to Closed Auto Solve Cases
- Avoid &quot;Care_Visitor_Abandoned_Chats&quot; queue&apos;s ownership cases by updating the case owner again.
- BTE-4176 - Alert Routing - TaDa
- BTE-4392 - Move Gusto Global to Specialization Skill Category</description>
    <environments>Default</environments>
    <formulas>
        <name>caseCustomerJourney</name>
        <dataType>String</dataType>
        <expression>IF(
ISBLANK(TEXT({!$Record.Customer_Journey__c})),
&apos;Large Scale Issue&apos;,
TEXT({!$Record.Customer_Journey__c})
)</expression>
    </formulas>
    <formulas>
        <name>caseRootCause</name>
        <dataType>String</dataType>
        <expression>IF(
ISBLANK(TEXT({!$Record.Root_Cause__c})),
TEXT({!$Record.Large_Scale_Issue_Classification__r.Root_Cause__c}),
TEXT({!$Record.Root_Cause__c})
)</expression>
    </formulas>
    <formulas>
        <name>caseSubRootCause</name>
        <dataType>String</dataType>
        <expression>IF(
ISBLANK(TEXT({!$Record.Sub_Root_Cause__c})),
TEXT({!$Record.Large_Scale_Issue_Classification__r.Sub_Root_Cause__c}),
TEXT({!$Record.Sub_Root_Cause__c})
)</expression>
    </formulas>
    <formulas>
        <name>emailDomain</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!$Record.SuppliedEmail}, LEFT({!$Record.SuppliedEmail}, FIND(&quot;@&quot;, {!$Record.SuppliedEmail})), NULL)</expression>
    </formulas>
    <formulas>
        <name>EvaluateSetCaseSubjectCondition</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW() || ISCHANGED( {!$Record.Carrier__c} ) || ISCHANGED( {!$Record.AccountId} ) || ISCHANGED( {!$Record.ContactId} ) || ISCHANGED( {!$Record.Type} ) || ISCHANGED( {!$Record.RecordTypeId} )</expression>
    </formulas>
    <formulas>
        <name>IsNewRecord</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>Next_30_Days</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 30</expression>
    </formulas>
    <formulas>
        <name>Now</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <formulas>
        <name>SetCaseSubjectForNHE_QLE_Termination</name>
        <dataType>String</dataType>
        <expression>If( NOT(ISNULL({!$Record.AccountId})), {!$Record.Account.Name} &amp;&quot; : &quot; ,&quot;&quot; )
&amp;
If( NOT(ISNULL({!$Record.ContactId})), {!$Record.Contact.FirstName} &amp; &quot; &quot; &amp; {!$Record.Contact.LastName} &amp;&quot; : &quot; ,&quot;&quot; )
&amp;
If( NOT(ISNULL({!$Record.Carrier__c})), {!$Record.Carrier__r.Name} &amp;&quot; : &quot; ,&quot;&quot; )
&amp;
TEXT({!$Record.Type})</expression>
    </formulas>
    <formulas>
        <name>varConfidenceThresholdNotMet</name>
        <dataType>Boolean</dataType>
        <expression>AND(
    NOT(ISBLANK({!$Record.Agatha_Confidence__c})),
    100 *{!$Record.Routing_Case_Reason_Classification__r.Confidence_Threshold__c} &gt; {!$Record.Agatha_Confidence__c},
    NOT(ISBLANK( {!$Record.Routing_Case_Reason_Classification__c})),
    NOT(ISPICKVAL({!$Record.Routing_Case_Reason_Classification__r.Auto_Email_Behavior__c}, &apos;&apos;))
)</expression>
    </formulas>
    <formulas>
        <name>varRequestDeadlineDate</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 44</expression>
    </formulas>
    <formulas>
        <name>varRequesterEmail</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.SuppliedEmail}), {!$Record.Contact.Email}, {!$Record.SuppliedEmail})</expression>
    </formulas>
    <formulas>
        <description>Criteria to send Tax Res email alert when status is updated to the research in progress.</description>
        <name>varResearchEmailCriteria</name>
        <dataType>Boolean</dataType>
        <expression>{!$Record.RecordType.Name} = &apos;Tax Res&apos; &amp;&amp;
 ISPICKVAL( {!$Record.Status} , &apos;Research in progress&apos; ) &amp;&amp;
ISCHANGED({!$Record.Status}) &amp;&amp;
{!$Record.IsClosed} = false &amp;&amp;
( ISBLANK( {!$Record.Mass_Email_Step__c}) ||
  ( NOT( INCLUDES({!$Record.Mass_Email_Step__c} , &apos;Tax Res Research in progress Email&apos; ) )  &amp;&amp;
    NOT( INCLUDES({!$Record.Mass_Email_Step__c} , &apos;P&amp;I Late Deposit/Amendment Partial Auto-Solve Fired&apos; ) ) )
) &amp;&amp;
NOT( INCLUDES({!$Record.Mass_Email_Step__c} , &apos;Skip Research in progress Email&apos; ) ) &amp;&amp;
NOT( INCLUDES({!$Record.Action_Taken__c} , &apos;Skip Email Alert&apos; ) )</expression>
    </formulas>
    <formulas>
        <name>varResearchEmailWhenPnIDeclines</name>
        <dataType>Boolean</dataType>
        <expression>{!$Record.RecordType.Name} = &apos;Tax Res&apos; &amp;&amp;
ISPICKVAL( {!$Record.Status} , &apos;Research in progress&apos; ) &amp;&amp;
{!$Record.IsClosed} = false &amp;&amp;
( ISBLANK( {!$Record.Mass_Email_Step__c}) ||
NOT(INCLUDES({!$Record.Mass_Email_Step__c} , &apos;Tax Res Research in progress Email&apos;)) &amp;&amp;
NOT( INCLUDES({!$Record.Mass_Email_Step__c} , &apos;P&amp;I Late Deposit/Amendment Partial Auto-Solve Fired&apos;) ) &amp;&amp;
INCLUDES({!$Record__Prior.Mass_Email_Step__c} , &apos;P&amp;I Late Deposit/Amendment Partial Auto-Solve Fired&apos;) &amp;&amp;
NOT( INCLUDES({!$Record.Mass_Email_Step__c} , &apos;P&amp;I Late Deposit/Amendment Auto-Solve Fired&apos;) ) 
) &amp;&amp;
NOT( INCLUDES({!$Record.Mass_Email_Step__c} , &apos;Skip Research in progress Email&apos; ) ) &amp;&amp;
NOT( INCLUDES({!$Record.Action_Taken__c} , &apos;Skip Email Alert&apos; ) )</expression>
    </formulas>
    <interviewLabel>Case Before Save {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Before Save Trigger</label>
    <loops>
        <name>Loop_Over_Solve_Permission_Sets</name>
        <label>Loop Over Solve Permission Sets</label>
        <locationX>358</locationX>
        <locationY>4835</locationY>
        <collectionReference>Get_Solve_PermissionSets</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Name</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_PermissionSetAssignments</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop through the subject lines to find the subject match</description>
        <name>Loop_through_the_subject_lines</name>
        <label>Loop through the subject lines</label>
        <locationX>578</locationX>
        <locationY>2111</locationY>
        <collectionReference>Get_Subject_Lines_for_Engagement_Alert</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Does_it_match_with_case_subject</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Persona_Assignment</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get Benefits Care Auto Close Queue Id</description>
        <name>Get_Benefits_Care_Auto_Close</name>
        <label>Get Benefits Care - Auto Close</label>
        <locationX>6650</locationX>
        <locationY>2111</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Owner_Id_01</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ben_Care_Auto_Close</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Reason_Classifications_for_Benefits</name>
        <label>Get Case Reason Classifications for Benefits</label>
        <locationX>3218</locationX>
        <locationY>2111</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Engagement_Benefits_Unauthorized_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Carrier Reply - Non-actionable</stringValue>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case_Reason_Classification__c</object>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Reason_Classifications_for_Payroll</name>
        <label>Get Case Reason Classifications for Payroll</label>
        <locationX>5154</locationX>
        <locationY>2111</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Engagement_Payroll_Unauthorized_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>No Action or Wrong Email</stringValue>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case_Reason_Classification__c</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Reason_Classifications_for_Payroll_1</name>
        <label>Get Case Reason Classifications for Payroll</label>
        <locationX>1898</locationX>
        <locationY>2111</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_NPS_Survey_Response_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>No Action or Wrong Email</stringValue>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case_Reason_Classification__c</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Engagement_Auto_Close</name>
        <label>Get Engagement Auto Close</label>
        <locationX>578</locationX>
        <locationY>5927</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Owner_Id_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payroll_Care_Auto_Close</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Engagement_Benefits_Unauthorized_Queue</name>
        <label>Get Engagement Benefits Unauthorized Queue</label>
        <locationX>3218</locationX>
        <locationY>2219</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_Benefits_Care_Read_Only</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Engagement_Benefits_Unauthorized</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Engagement_Non_Actionable</name>
        <label>Get Engagement-Non Actionable</label>
        <locationX>842</locationX>
        <locationY>5927</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Owner_Id_3</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payroll_Care_Non_Actionable</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Engagement_Payroll_Unauthorized_Queue</name>
        <label>Get Engagement Payroll Unauthorized Queue</label>
        <locationX>5154</locationX>
        <locationY>2219</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_Payroll_Care_Read_Only</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Engagement_Payroll_Unauthorized</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Forethought_Solve_Response</name>
        <label>Get Forethought Solve Response</label>
        <locationX>358</locationX>
        <locationY>4511</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Internal_Solve_Response</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>forethought__Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>forethought__EmailResponseName__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>forethought__ForethoughtSolveEmailConversation__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>forethought__EmailContentHTML__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Internal_Solve_Response</name>
        <label>Get Internal Solve Response</label>
        <locationX>358</locationX>
        <locationY>4619</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Solve_PermissionSets</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Valid_Request__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>valid_request</stringValue>
            </value>
        </filters>
        <filters>
            <field>Return_Response__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InternalAISolveEmailConversation__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_NPS_Survey_Response_Queue</name>
        <label>Get NPS Survey Response Queue</label>
        <locationX>1898</locationX>
        <locationY>2219</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_NPS_Survey_Response</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NPS_Survey_Response</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get Payroll Care Auto Close Queue Id</description>
        <name>Get_Payroll_Care_Auto_Close</name>
        <label>Get Payroll Care - Auto Close</label>
        <locationX>5594</locationX>
        <locationY>2111</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Owner_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payroll_Care_Auto_Close</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get Payroll Care Non Actionable Queue Id</description>
        <name>Get_Payroll_Care_Non_Actionable</name>
        <label>Get Payroll Care - Non Actionable</label>
        <locationX>5858</locationX>
        <locationY>2111</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Owner_Id_1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payroll_Care_Non_Actionable</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Payroll_Care_Record_Type</name>
        <label>Get Payroll Care Record Type</label>
        <locationX>4406</locationX>
        <locationY>1595</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Record_Type_to_Payroll_Care</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payroll_Care</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_PermissionSetAssignments</name>
        <label>Get PermissionSetAssignments</label>
        <locationX>358</locationX>
        <locationY>5327</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Auto_Solve_Permission</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CareAutoSolveId</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CXLabsId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Solve_PermissionSets</name>
        <label>Get Solve PermissionSets</label>
        <locationX>358</locationX>
        <locationY>4727</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Over_Solve_Permission_Sets</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Care_Auto_Solve</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CX_Labs_Permission_Set</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Collection of Subject lines from Custom Metadata(General Alert Subject Lines(Engagement)</description>
        <name>Get_Subject_Lines_for_Engagement_Alert</name>
        <label>Get Subject Lines for Engagement Alert</label>
        <locationX>578</locationX>
        <locationY>2003</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_the_subject_lines</targetReference>
        </connector>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>General_Alert_Subject_Lines_Engagement__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Unauthorized_Case_Reason</name>
        <label>Unauthorized Case Reason</label>
        <locationX>314</locationX>
        <locationY>5927</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_Engagement</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>No Action or Wrong Email</stringValue>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case_Reason_Classification__c</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Electronic_Notice_Update_Automation_Message</name>
        <label>Electronic Notice Update Automation Message</label>
        <locationX>4054</locationX>
        <locationY>2819</locationY>
        <inputAssignments>
            <field>Auto_Response_Email_Content__c</field>
            <value>
                <elementReference>tempFBEDResearchEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Automation_Message__c</field>
            <value>
                <stringValue>Tax Res Research in progress Email</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Automation_Status__c</field>
            <value>
                <stringValue>Started</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Increment_Followup_Date_Change_Count</name>
        <label>Increment Followup Date Change Count</label>
        <locationX>4340</locationX>
        <locationY>995</locationY>
        <connector>
            <targetReference>Check_Status_Updated</targetReference>
        </connector>
        <inputAssignments>
            <field>Followup_Date_Change_Count__c</field>
            <value>
                <elementReference>followupDateChangeCount</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>MF_Update_automation_date_when_status</name>
        <label>MF - Update automation date when status</label>
        <locationX>4406</locationX>
        <locationY>1295</locationY>
        <connector>
            <targetReference>Check_Owner_Is_Paryoll_Care_Routing</targetReference>
        </connector>
        <inputAssignments>
            <field>MF_Automation_Submitted_Date__c</field>
            <value>
                <elementReference>Now</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Automation_Message_1</name>
        <label>Update Automation Message</label>
        <locationX>4318</locationX>
        <locationY>2819</locationY>
        <inputAssignments>
            <field>Auto_Response_Email_Content__c</field>
            <value>
                <elementReference>tempResearchEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Automation_Message__c</field>
            <value>
                <stringValue>Tax Res Research in progress Email</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Automation_Status__c</field>
            <value>
                <stringValue>Started</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Automation_Message_2</name>
        <label>Update Automation Message</label>
        <locationX>4538</locationX>
        <locationY>6419</locationY>
        <inputAssignments>
            <field>Automation_Status__c</field>
            <value>
                <stringValue>Started</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>4406</locationX>
        <locationY>395</locationY>
        <connector>
            <targetReference>Track_Followup_Date_Change</targetReference>
        </connector>
        <inputAssignments>
            <field>First_Response_Start_Time__c</field>
            <value>
                <elementReference>Now</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_fields</name>
        <label>Update Case fields</label>
        <locationX>4406</locationX>
        <locationY>2111</locationY>
        <connector>
            <targetReference>Status_Path</targetReference>
        </connector>
        <inputAssignments>
            <field>Customer_Journey__c</field>
            <value>
                <elementReference>caseCustomerJourney</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Root_Cause__c</field>
            <value>
                <elementReference>caseRootCause</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Sub_Root_Cause__c</field>
            <value>
                <elementReference>caseSubRootCause</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Record_Type_to_Payroll_Care</name>
        <label>Update Case Record Type to Payroll Care</label>
        <locationX>4406</locationX>
        <locationY>1703</locationY>
        <connector>
            <targetReference>RecordType_Decision</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Payroll_Care_Record_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Payroll Care</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_the_Case_Owner_as_Current_User</name>
        <label>Update the Case Owner as Current User</label>
        <locationX>7970</locationX>
        <locationY>2111</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>4412</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Update_First_Response_Start_Time_30</targetReference>
        </connector>
        <filterFormula>(NOT({!$Permission.Bypass_Flow_Case})
&amp;&amp; NOT({!$Permission.Bypass_Flows}))</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>tempChecklistEmail</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;Thank you for your email and reaching out to Gusto. We know that receiving a tax notice can be a frustrating experience -- and here on the Tax Resolution team, we’re here to make sure we support you through this process.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;What’s Next?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;Your case will be assigned directly to a Tax Resolution Notice Specialist who will verify that we have the necessary information to begin the investigation. Once confirmed, we’ll begin researching your notice and will communicate with the issuing Tax Agency on your behalf. If we need further clarification from you, the Specialist assigned to your case will contact you directly. &lt;/span&gt;&lt;em style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;&lt;u&gt;At this point, there is no required action on your part.&lt;/u&gt;&lt;/em&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;Once your case has been resolved, you’ll receive an email confirmation with details.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;em style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;Reminder: Gusto does not receive notices from any agencies—they&apos;re only sent to the company directly. For more information on how to handle these notices in the future, head to this &lt;/em&gt;&lt;a href=&quot;https://support.gusto.com/article/106621962100000/What-to-do-if-you-get-a-tax-notice-from-an-agency&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: transparent; color: rgb(17, 85, 204); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;&lt;em&gt;&lt;u&gt;Help Center article&lt;/u&gt;&lt;/em&gt;&lt;/a&gt;&lt;em style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;.&amp;nbsp;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;We appreciate the opportunity to partner with you in building &amp;amp; growing your business and look forward to supporting you through this Tax Notice experience.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;All the best,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: &amp;quot;Proxima Nova&amp;quot;, sans-serif; font-size: 11pt;&quot;&gt;Tax Resolution Team&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <description>Used for Electronic Notice Cases</description>
        <name>tempFBEDResearchEmail</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;As {!$Record.Account.Name}’s payroll provider, Gusto recently received a tax notice directly from {!$Record.Agency_Information__r.Name} for your company. We’re including a copy of this notice here for your information, but rest assured—there’s no action needed from you right now.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;We’re assigning this case to a Tax Resolution Specialist who’s skilled in handling this type of tax notice. If they determine we need more info from you to resolve this, we’ll reach out to you via email.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;Otherwise, once your case has been investigated and resolved, you’ll receive a confirmation email with details.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;If you have questions about this notice in the meantime, respond directly to this email—we&apos;ll be happy to help you.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;Sincerely,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;The Gusto team&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tempResearchEmail</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(34, 37, 37); background-color: transparent;&quot;&gt;We&apos;ve completed our initial review of your notice. Rest assured, your case is now in the hands of one of our dedicated Tax Resolution Specialists who specializes in handling cases like yours. Should our specialists require further information from you to proceed, they will contact you directly. Right now, there&apos;s no immediate action needed on your part.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(34, 37, 37); background-color: transparent;&quot;&gt;Once your case is resolved, you&apos;ll receive a confirmation email with all the details.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(34, 37, 37); background-color: transparent;&quot;&gt;If you&apos;ve submitted multiple notices, each one will be carefully assigned to the most suitable Tax Specialist. You&apos;ll receive an email notification once a specialist is assigned to any additional notices.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(34, 37, 37); background-color: transparent;&quot;&gt;Thank you for choosing Gusto as your partner in business growth. We&apos;re committed to serving you and look forward to resolving this matter efficiently.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(34, 37, 37); background-color: transparent;&quot;&gt;Warm regards,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial, sans-serif; color: rgb(34, 37, 37); background-color: transparent;&quot;&gt;Gusto Tax Resolution Team&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>CareAutoSolveId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CXLabsId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>followupDateChangeCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
