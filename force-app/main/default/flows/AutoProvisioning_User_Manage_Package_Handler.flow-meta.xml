<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Set_Auto_Provisioning_Fields_After_CXOne_License_Assigned</name>
        <label>Set Auto-Provisioning Fields After CXOne License Assigned</label>
        <locationX>1106</locationX>
        <locationY>1862</locationY>
        <assignmentItems>
            <assignToReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_only_Managed_Package_Trigger_for_Removal_field_only_after_CXOne_Removal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Auto_Provisioning_Fields_on_User_Record</name>
        <label>Set Both Auto-Provisioning Fields on User Record</label>
        <locationX>314</locationX>
        <locationY>1982</locationY>
        <assignmentItems>
            <assignToReference>Get_User_Record.Managed_Packages_Last_Removed_By__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Package_Removal_User</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_User_Record.Managed_Packages_Last_Removed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_User_After_Package_Removal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Auto_Provisioning_Fields_on_User_Record_ONLY</name>
        <label>Set Auto-Provisioning Fields on User Record ONLY</label>
        <locationX>1634</locationX>
        <locationY>1742</locationY>
        <assignmentItems>
            <assignToReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_only_Managed_Package_Trigger_for_Removal_field_only</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set the CXOne license check variable to True</description>
        <name>Set_CXOne_Check_Variable</name>
        <label>Set CXOne Check Variable</label>
        <locationX>908</locationX>
        <locationY>1118</locationY>
        <assignmentItems>
            <assignToReference>varCXOne_License_Assigned</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_to_find_CXOne_License</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Un_Check_Trigger</name>
        <label>Un-Check Trigger</label>
        <locationX>50</locationX>
        <locationY>1982</locationY>
        <assignmentItems>
            <assignToReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_User_After_Package_Removal</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>CXOne_Managed_Package_Assignment</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>CXOne Managed Package Assignment</label>
        <locationX>820</locationX>
        <locationY>758</locationY>
        <assignNextValueToReference>currentItem_CXOne_Managed_Package_Assignment</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Assigned_Managed_Packages</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_CXOne_Managed_Package_Assignment.PackageLicenseId__NotFound</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>CXOne_Managed_Package_License.Id</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Loop_to_find_CXOne_License</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <description>This is to check if a user should have the CXOne Managed package.  Currently this is only for users with a Call Center.  Some users without call centers use the widget for time keeping.  If that should be automated.  Add OR logic for the Role or Profile.</description>
        <name>CXOne_Evaluation</name>
        <label>CXOne Evaluation</label>
        <locationX>952</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>Was_existing_record_found</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not needed</defaultConnectorLabel>
        <rules>
            <name>License_Needed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Record.CallCenterId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_CXOne_Managed_Package_ID</targetReference>
            </connector>
            <label>License Needed</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is to check if a user should have the CXOne Managed package.  Currently this is only for users with a Call Center.  Some users without call centers use the widget for time keeping.  If that should be automated.  Add OR logic for the Role or Profile.</description>
        <name>CXOne_Evaluation_No_Packages</name>
        <label>CXOne Evaluation</label>
        <locationX>1392</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>Was_existing_record_found</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not needed</defaultConnectorLabel>
        <rules>
            <name>License_Needed_No_Packages</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Record.CallCenterId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_CXOne_Managed_Package_ID_No_Packages</targetReference>
            </connector>
            <label>License Needed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check to see if filter found a record</description>
        <name>Licenses_Check</name>
        <label>Licenses Check</label>
        <locationX>1040</locationX>
        <locationY>998</locationY>
        <defaultConnector>
            <targetReference>Loop_to_find_CXOne_License</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CXOne_License_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_to_find_CXOne_License.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_CXOne_Check_Variable</targetReference>
            </connector>
            <label>CXOne License Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>If the user has no licenses, no use in checking for specific assignments.</description>
        <name>Licenses_Found</name>
        <label>Licenses Found?</label>
        <locationX>1172</locationX>
        <locationY>398</locationY>
        <defaultConnector>
            <targetReference>CXOne_Evaluation_No_Packages</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>User does not have licenses</defaultConnectorLabel>
        <rules>
            <name>User_has_licenses</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Assigned_Managed_Packages</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CXOne_Evaluation</targetReference>
            </connector>
            <label>User has licenses</label>
        </rules>
    </decisions>
    <decisions>
        <description>If this is a new user Managed Packages (Removed) should not be populated</description>
        <name>New_User_Check</name>
        <label>New User Check</label>
        <locationX>182</locationX>
        <locationY>1862</locationY>
        <defaultConnector>
            <targetReference>Set_Auto_Provisioning_Fields_on_User_Record</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Existing User</defaultConnectorLabel>
        <rules>
            <name>New_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varNew_User</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Un_Check_Trigger</targetReference>
            </connector>
            <label>New User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_existing_record_found</name>
        <label>Was existing record found?</label>
        <locationX>1172</locationX>
        <locationY>1622</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>Inactive_User_Remove_All_Licenses</name>
            <conditionLogic>1 and (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Assigned_Managed_Packages</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Remove_Managed_Package_Licenses</targetReference>
            </connector>
            <label>Inactive User - Remove All Licenses</label>
        </rules>
        <rules>
            <name>Active_User_Without_CXOne_License</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Record.CallCenterId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCXOne_License_Assigned</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_CXOne_Managed_Package_License_to_User</targetReference>
            </connector>
            <label>Active User Without CXOne License</label>
        </rules>
        <rules>
            <name>Update_Managed_Package_Fields</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Assigned_Managed_Packages</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User_Record.Managed_Packages_Trigger_for_Removal__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Auto_Provisioning_Fields_on_User_Record_ONLY</targetReference>
            </connector>
            <label>Update Managed Package Fields</label>
        </rules>
    </decisions>
    <description>Overview:  This Subflow is called with the UserID of the user and manage thestribution Engine flow until Sunset.    
* If the user is deactivated it will remove all managed Package Licenses
* If the user has a Call Center assigned and does not have CXOne Managed Package it will assign it. 
* If an Active User does not have any Managed Packages Assigned it will uncheck the trigger for Managed Package (Trigger for Removal) field
* For each activity, if managed packages are removed, it will populate the Managed Packages Last Removed and Managed Packages Last Removed By Fields.  Note:  Distribution Engine is planned for removal so it will still assign licenses until sunset.</description>
    <environments>Default</environments>
    <formulas>
        <name>Found_Assignment</name>
        <dataType>Boolean</dataType>
        <expression>NOT(ISNULL({!Package_Assignment.Id}))</expression>
    </formulas>
    <formulas>
        <name>Package_Removal_User</name>
        <dataType>String</dataType>
        <expression>{!$User.FirstName} &amp; &apos; &apos; &amp; {!$User.LastName}</expression>
    </formulas>
    <interviewLabel>AutoProvisioning - User Manage Package Handler {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AutoProvisioning - User Manage Package Handler</label>
    <loops>
        <description>Loop to find the variable and check as true</description>
        <name>Loop_to_find_CXOne_License</name>
        <label>Loop to find CXOne License</label>
        <locationX>820</locationX>
        <locationY>878</locationY>
        <collectionReference>CXOne_Managed_Package_Assignment</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Licenses_Check</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Was_existing_record_found</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Assign CXOne Managed Package License to User</description>
        <name>Assign_CXOne_Managed_Package_License_to_User</name>
        <label>Assign CXOne Managed Package License to User</label>
        <locationX>1106</locationX>
        <locationY>1742</locationY>
        <connector>
            <targetReference>Set_Auto_Provisioning_Fields_After_CXOne_License_Assigned</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Slack_Message_Fault_Flow_for_Assign_CXOne_Managed_Package</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>PackageLicenseId__NotFound</field>
            <value>
                <elementReference>CXOne_Managed_Package_License.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserId__NotFound</field>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </inputAssignments>
        <object>UserPackageLicense</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <description>Delete all managed package license assignments</description>
        <name>Remove_Managed_Package_Licenses</name>
        <label>Remove Managed Package Licenses</label>
        <locationX>182</locationX>
        <locationY>1742</locationY>
        <connector>
            <targetReference>New_User_Check</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Slack_Message_Fault_Flow_for_Remove_Managed_Package_Licenses</targetReference>
        </faultConnector>
        <inputReference>Assigned_Managed_Packages</inputReference>
    </recordDeletes>
    <recordLookups>
        <description>Get the managed package ID for the CXOne</description>
        <name>Get_CXOne_Managed_Package_ID</name>
        <label>Get CXOne Managed Package ID</label>
        <locationX>820</locationX>
        <locationY>638</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CXOne_Managed_Package_Assignment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>NamespacePrefix</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>icAgentConsole</stringValue>
            </value>
        </filters>
        <object>PackageLicense</object>
        <outputReference>CXOne_Managed_Package_License</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>NamespacePrefix</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get the managed package ID for the CXOne</description>
        <name>Get_CXOne_Managed_Package_ID_No_Packages</name>
        <label>Get CXOne Managed Package ID</label>
        <locationX>1260</locationX>
        <locationY>638</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Was_existing_record_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>NamespacePrefix</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>icAgentConsole</stringValue>
            </value>
        </filters>
        <object>PackageLicense</object>
        <outputReference>CXOne_Managed_Package_License</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>NamespacePrefix</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get the record for the user that triggered the parent flow.</description>
        <name>Get_User_Record</name>
        <label>Get User Record</label>
        <locationX>1172</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Look_for_Existing_Assignment_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Search for existing record and exit if found</description>
        <name>Look_for_Existing_Assignment_Record</name>
        <label>Look for Existing Assignment Record</label>
        <locationX>1172</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Licenses_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserId__NotFound</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </filters>
        <object>UserPackageLicense</object>
        <outputReference>Assigned_Managed_Packages</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>PackageLicenseId__NotFound</queriedFields>
        <queriedFields>UserId__NotFound</queriedFields>
    </recordLookups>
    <recordUpdates>
        <description>Update only Managed Package (Trigger for Removal) field only because no Managed Package Licenses were found.</description>
        <name>Update_only_Managed_Package_Trigger_for_Removal_field_only</name>
        <label>Update only Managed Package (Trigger for Removal) field only</label>
        <locationX>1634</locationX>
        <locationY>1862</locationY>
        <faultConnector>
            <targetReference>Slack_Message_Fault_Flow_for_Update_only_Managed_Package_Trigger_for_Removal_fie</targetReference>
        </faultConnector>
        <inputReference>Get_User_Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Update only Managed Package (Trigger for Removal) field only because only CXOne Managed Package Assigned and none were removed</description>
        <name>Update_only_Managed_Package_Trigger_for_Removal_field_only_after_CXOne_Removal</name>
        <label>Update only Managed Package (Trigger for Removal) field only after CXOne Removal</label>
        <locationX>1106</locationX>
        <locationY>1982</locationY>
        <inputReference>Get_User_Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Update the user with the updated AutoProvisioning fields</description>
        <name>Update_User_After_Package_Removal</name>
        <label>Update User After Package Removal</label>
        <locationX>182</locationX>
        <locationY>2198</locationY>
        <faultConnector>
            <targetReference>Slack_Message_Fault_Flow_for_Update_User_After_Package_Removal</targetReference>
        </faultConnector>
        <inputReference>Get_User_Record</inputReference>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>1046</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_User_Record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Send Slack Message</description>
        <name>Slack_Message_Fault_Flow_for_Assign_CXOne_Managed_Package</name>
        <label>Slack Message Fault Flow for Assign CXOne Managed Package</label>
        <locationX>1370</locationX>
        <locationY>1862</locationY>
        <flowName>Slack_Message_Fault_Flow</flowName>
        <inputAssignments>
            <name>varCurrentFlowAction</name>
            <value>
                <stringValue>Assign CXOne Managed Package</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlow_Action_Description</name>
            <value>
                <stringValue>Assigning the CXOne Managed Package to a user who doesn&apos;t have it</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varObject_Name</name>
            <value>
                <stringValue>User</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varParent_Flow_Name</name>
            <value>
                <stringValue>AutoProvisioning - User Managed Package Handler</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varRecordID</name>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <description>Send Slack Message</description>
        <name>Slack_Message_Fault_Flow_for_Remove_Managed_Package_Licenses</name>
        <label>Slack Message Fault Flow for Remove Managed Package Licenses</label>
        <locationX>842</locationX>
        <locationY>1862</locationY>
        <flowName>Slack_Message_Fault_Flow</flowName>
        <inputAssignments>
            <name>varCurrentFlowAction</name>
            <value>
                <stringValue>Remove Managed Package Licenses</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlow_Action_Description</name>
            <value>
                <stringValue>Delete all managed package license assignments</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varObject_Name</name>
            <value>
                <stringValue>User</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varParent_Flow_Name</name>
            <value>
                <stringValue>AutoProvisioning - User Managed Package Handler</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varRecordID</name>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <description>Send Slack Message</description>
        <name>Slack_Message_Fault_Flow_for_Update_only_Managed_Package_Trigger_for_Removal_fie</name>
        <label>Slack Message Fault Flow for Update only Managed Package (Trigger for Removal) field only</label>
        <locationX>1898</locationX>
        <locationY>1982</locationY>
        <flowName>Slack_Message_Fault_Flow</flowName>
        <inputAssignments>
            <name>varCurrentFlowAction</name>
            <value>
                <stringValue>Update only Managed Package (Trigger for Removal) field only</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlow_Action_Description</name>
            <value>
                <stringValue>Update only Managed Package (Trigger for Removal) field only because no Managed Package Licenses were found.  </stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varObject_Name</name>
            <value>
                <stringValue>User</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varParent_Flow_Name</name>
            <value>
                <stringValue>AutoProvisioning - User Managed Package Handler</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varRecordID</name>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <description>Send Slack Message</description>
        <name>Slack_Message_Fault_Flow_for_Update_User_After_Package_Removal</name>
        <label>Slack Message Fault Flow for Update User After Package Removal</label>
        <locationX>578</locationX>
        <locationY>2318</locationY>
        <flowName>Slack_Message_Fault_Flow</flowName>
        <inputAssignments>
            <name>varCurrentFlowAction</name>
            <value>
                <stringValue>Update User After Package Removal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlow_Action_Description</name>
            <value>
                <stringValue>Update the Auto-Provisioning Fields on the User Record</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varObject_Name</name>
            <value>
                <stringValue>User</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varParent_Flow_Name</name>
            <value>
                <stringValue>AutoProvisioning - User Managed Package Handler</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varRecordID</name>
            <value>
                <elementReference>User_ID</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>Assigned_Managed_Packages</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>UserPackageLicense</objectType>
    </variables>
    <variables>
        <name>currentItem_CXOne_Managed_Package_Assignment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>UserPackageLicense</objectType>
    </variables>
    <variables>
        <description>The ID of the managed package</description>
        <name>CXOne_Managed_Package_ID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>CXOne_Managed_Package_License</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PackageLicense</objectType>
    </variables>
    <variables>
        <name>Package_Assignment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>UserPackageLicense</objectType>
    </variables>
    <variables>
        <description>The user ID of the person being assigned the managed package license</description>
        <name>User_ID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <description>Set to True because filter found a license</description>
        <name>varCXOne_License_Assigned</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Will be assigned the CXOne Package License.   Used as a variable in order to test for null</description>
        <name>varCXOne_Package_License_Id</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>New User value sent from parent flow</description>
        <name>varNew_User</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
