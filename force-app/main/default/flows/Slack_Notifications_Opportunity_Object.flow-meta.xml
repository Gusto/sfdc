<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Slack_Message_To_Benefits_Plan</name>
        <label>Send Slack Message To Benefits Plan</label>
        <locationX>374</locationX>
        <locationY>900</locationY>
        <actionName>slackv2__invokePostMessage</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>benefitsOppPlanTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>messageDestinationId</name>
            <value>
                <elementReference>Get_Message_Destination.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>slackv2__invokePostMessage</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Slack_Message_To_Benefits_Plan_Without_TTF</name>
        <label>Send Slack Message To Benefits Plan Without TTF</label>
        <locationX>638</locationX>
        <locationY>900</locationY>
        <actionName>slackv2__invokePostMessage</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>benefitsOppPlanTemplateWithoutTTF</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>messageDestinationId</name>
            <value>
                <elementReference>Get_Message_Destination.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>slackv2__invokePostMessage</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>Set_Benefit_Change_Channel_Name</name>
        <label>Set Benefit Change Channel Name</label>
        <locationX>638</locationX>
        <locationY>384</locationY>
        <assignmentItems>
            <assignToReference>selectedChannelName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Label.Benefits_Change_Channel_Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Message_Destination</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Benefit_New_Plan_Channel_Name</name>
        <label>Set Benefit New Plan Channel Name</label>
        <locationX>110</locationX>
        <locationY>384</locationY>
        <assignmentItems>
            <assignToReference>selectedChannelName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Label.Benefit_New_Plan_Channel_Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Message_Destination</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Benefit_Renewal_Channel_Name</name>
        <label>Set Benefit Renewal Channel Name</label>
        <locationX>374</locationX>
        <locationY>384</locationY>
        <assignmentItems>
            <assignToReference>selectedChannelName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Label.Benefits_Renewal_Channel_Name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Message_Destination</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Opportunity_Benefit_Type</name>
        <label>Check Opportunity Benefit Type</label>
        <locationX>506</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>Get_Message_Destination</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Benefit_New_Plan</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits New Plan</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Benefit_New_Plan_Channel_Name</targetReference>
            </connector>
            <label>Is Benefit New Plan</label>
        </rules>
        <rules>
            <name>Is_Benefits_Renewal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits Renewal</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Benefit_Renewal_Channel_Name</targetReference>
            </connector>
            <label>Is Benefits Renewal</label>
        </rules>
        <rules>
            <name>Is_Benefits_Change</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits Change</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Benefit_Change_Channel_Name</targetReference>
            </connector>
            <label>Is Benefits Change</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Transition_To_Fulfillment_Exist</name>
        <label>Is Transition To Fulfillment Exist</label>
        <locationX>506</locationX>
        <locationY>792</locationY>
        <defaultConnector>
            <targetReference>Send_Slack_Message_To_Benefits_Plan_Without_TTF</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Is_Transition_To_Fulfillment_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Transition_To_Fulfillment</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Transition_To_Fulfillment.recordtype_name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.RecordType.Name</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Slack_Message_To_Benefits_Plan</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Slack channel #MDR_Direct_New_Opportunity: This channel notifies MDRs of new Direct Opportunities</description>
    <environments>Default</environments>
    <formulas>
        <name>currentURL</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_340}, FIND( &apos;/services&apos;, {!$Api.Partner_Server_URL_340}))</expression>
    </formulas>
    <interviewLabel>Slack Notifications - Opportunity Object {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Benefits Opportunity ER Confirmation Slack Notification</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Message_Destination</name>
        <label>Get Message Destination</label>
        <locationX>506</locationX>
        <locationY>576</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Transition_To_Fulfillment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>slackv2__Channel_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>selectedChannelName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>slackv2__Message_Destination__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Transition_To_Fulfillment</name>
        <label>Get Transition To Fulfillment</label>
        <locationX>506</locationX>
        <locationY>684</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Transition_To_Fulfillment_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Transition_to_Fulfillment__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>recordtype_name__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>1 AND ( 2 OR 3 OR 4 )</filterLogic>
        <filters>
            <field>SlackNotificationPending__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Opportunity_Record_Type_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Benefits New Plan</stringValue>
            </value>
        </filters>
        <filters>
            <field>Opportunity_Record_Type_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Benefits Renewal</stringValue>
            </value>
        </filters>
        <filters>
            <field>Opportunity_Record_Type_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Benefits Change</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>Post_Message_To_Slack_Channel</name>
            <connector>
                <targetReference>Check_Opportunity_Benefit_Type</targetReference>
            </connector>
            <label>Post Message To Slack Channel</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>benefitsOppPlanTemplate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Opportunity Confirmed-{!$Record.Name}
&lt;{!currentURL}{!$Record.Id}|Click here to open Opportunity&gt;
&lt;@{!$Record.Owner_Slack_Id__c}&gt;
&lt;{!currentURL}{!Get_Transition_To_Fulfillment.Id}|TTF Link&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>benefitsOppPlanTemplateWithoutTTF</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Opportunity Confirmed-{!$Record.Name}
&lt;{!currentURL}{!$Record.Id}|Click here to open Opportunity&gt;
&lt;@{!$Record.Owner_Slack_Id__c}&gt;</text>
    </textTemplates>
    <variables>
        <name>selectedChannelName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
