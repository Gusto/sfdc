<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email</name>
        <label>Send Email</label>
        <locationX>182</locationX>
        <locationY>1082</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>ToAddress.value</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>FromAddress.value</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>SubjectwithThreadId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody.fieldValue</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>record.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Assign_Default_From_To_Addresses</name>
        <label>Assign Default From/To Addresses</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>FromAddress.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Customer_Email_details.ToAddress</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ToAddress.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Customer_Email_details.FromAddress</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Partner_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Capture_Values_from_Send_Partner_Email_Screen</name>
        <label>Capture Values from Send Partner Email Screen</label>
        <locationX>182</locationX>
        <locationY>974</locationY>
        <assignmentItems>
            <assignToReference>emailMessageNew.HtmlBody</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EmailBody.fieldValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailMessageNew.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Subject</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailMessageNew.ToAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ToAddress.value</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailMessageNew.FromAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FromAddress.value</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailMessageNew.ParentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>record.Used_Recommendation__c</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailMessageNew.FromName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FromAddress.value</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ReAssign_Default_From_To_Addresses</name>
        <label>ReAssign Default From/To Addresses</label>
        <locationX>314</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>FromAddress.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Customer_Email_details.FromAddress</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ToAddress.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Customer_Email_details.ToAddress</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Partner_Email</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Checks if the email template exists for the case default partner type</description>
        <name>If_an_email_template_exists</name>
        <label>If an email template exists</label>
        <locationX>380</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Error_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Partner_Case_Config.Email_Template_ID__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Email_Template_details</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_the_Latest_email_an_Incoming_email</name>
        <label>Is the Latest email an Incoming email?</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>ReAssign_Default_From_To_Addresses</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Outgoing Email</defaultConnectorLabel>
        <rules>
            <name>Incoming_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Customer_Email_details.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Default_From_To_Addresses</targetReference>
            </connector>
            <label>Incoming Email</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>SubjectwithThreadId</name>
        <dataType>String</dataType>
        <expression>{!Get_Customer_Email_details.Subject} &amp; &apos; &apos; &amp; {!record.Case_Reference__c}</expression>
    </formulas>
    <interviewLabel>Send Partner Email From Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send Partner Email From Case</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Customer_Email_details</name>
        <label>Get Customer Email details</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_the_Latest_email_an_Incoming_email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailMessage</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Email_Template_details</name>
        <label>Get Email Template details</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Customer_Email_details</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Partner_Case_Config.Email_Template_ID__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Queries the Partner case config custom metadata with the &apos;Partner Case Type&apos; value on the case</description>
        <name>Get_Partner_Case_Config</name>
        <label>Get Partner Case Config</label>
        <locationX>380</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>If_an_email_template_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>MasterLabel</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>record.Partner_Case_Type__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Partner_Case_Setting__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>If the email is sent from this flow, store the count on the case</description>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>182</locationX>
        <locationY>1190</locationY>
        <inputReference>record</inputReference>
    </recordUpdates>
    <screens>
        <description>Something went wrong, please contact your system administrator.</description>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen is an email compiler that has contents auto populated from a template</description>
        <name>Send_Partner_Email</name>
        <label>Recommendation: Send Partner Email</label>
        <locationX>182</locationX>
        <locationY>866</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Capture_Values_from_Send_Partner_Email_Screen</targetReference>
        </connector>
        <fields>
            <name>AgentInstructions</name>
            <fieldText>&lt;p&gt;{!InstructionsForAgent}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>FromAddress</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>From</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>placeholder</name>
                <value>
                    <elementReference>FromAddress.value</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>FromAddress.value</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>ToAddress</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>To</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>readonly</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>placeholder</name>
                <value>
                    <elementReference>ToAddress.value</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>ToAddress.value</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Subject</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>SubjectwithThreadId</elementReference>
            </defaultValue>
            <fieldText>Subject</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>EmailBody</name>
            <extensionName>c:screenFlowRichText</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fieldValue</name>
                <value>
                    <elementReference>Get_Email_Template_details.HtmlValue</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>visibleLines</name>
                <value>
                    <numberValue>30.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fromSendPartnerFlow</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <helpText>&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial, sans-serif; font-size: 11pt;&quot;&gt;Hi Gustie! It looks like this customer is contacting us about a 3rd party integration. This means this integration was built by this company. The company provides support and troubleshooting. Please feel free to add any further context from the Help Center article to this template.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</helpText>
        <nextOrFinishButtonLabel>Send Email</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Partner_Case_Config</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>InstructionsForAgent</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, &amp;quot;Fira Sans&amp;quot;, &amp;quot;Droid Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; color: rgb(23, 43, 77);&quot;&gt;Hi Gustie! &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, &amp;quot;Fira Sans&amp;quot;, &amp;quot;Droid Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; color: rgb(23, 43, 77);&quot;&gt;It looks like this customer is contacting us about a 3rd party integration. This means this integration was built by the integration partner. The integration partner is responsible for providing support and troubleshooting. &lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>emailMessageNew</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>EmailMessage</objectType>
    </variables>
    <variables>
        <name>record</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
